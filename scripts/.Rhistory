shape_vert = c(asb1 = 16, asb2 = 16),
alpha_ch = c(asb1 = 0, asb2 = 0),
color_ch = c(asb1 = "#00C19A", asb2 =NA),
fill_ch = c(asb1 = NA, asb2 = NA))
# legend and title
if (z==1) {
ggplot_z_2018 <- ggplot_z_2018  + labs(title = "2018" )+
theme(plot.title = element_text(size = 20, color = "#00C19A"))
}
# add species names if needed:
if (! is.null(plot_sp_nm)) {
x <- NULL
y <- NULL
ggplot_z_2018 <- ggplot_z_2018 +
ggrepel::geom_text_repel(data = sp_faxes_coord_plot,
ggplot2::aes_string(x = xy_z[1],
y = xy_z[2],
label = "label"),
size = 3, colour= "black",
fontface = "plain",
max.overlaps = Inf,
box.padding = grid::unit(2, 'lines'),
force = 5,
arrow = grid::arrow(length = grid::unit(0.02,
'npc')),
segment.color = "black")
}
# legend and title
if (z==1) {
ggplot_z_2018 <- ggplot_z_2018  + labs(title = "2018" )+
theme(plot.title = element_text(size = 20, color = "#00C19A"))
}
# ggplot stored in list
ggplot_2018[[z]] <- ggplot_z_2018
}# end of z
ggplot_z_2018
# computing occurrences of species in each habitat
hab_sp_occ <- rbind(
Inshore = apply(spatial_sp_biom [spatial_metadata[which(spatial_metadata$Habitat=="Inshore"),"Code"],],2,max ),
Midshelf = apply(spatial_sp_biom [spatial_metadata[which(spatial_metadata$Habitat=="Midshelf"),"Code"],],2,max ),
Offshore = apply(spatial_sp_biom [spatial_metadata[which(spatial_metadata$Habitat=="Offshore"),"Code"],],2,max )
)
offshore_occ <- hab_sp_occ %>% # I'm sure there is an easier way to do this...
as.data.frame() %>%
rownames_to_column("Sites") %>%
filter(Sites == "Offshore") %>%
column_to_rownames("Sites") %>%
as.matrix()
offshore_occ_2 <- offshore_occ %>%
as.data.frame() %>%
gather(Species, Abundance, 1:53)
add_thermal <- left_join(offshore_occ_2, thermal, by= "Species")
offshore_occ_thermal <- add_thermal %>%
spread(Species, Abundance, fill=0) %>%
column_to_rownames("thermal_label") %>%
as.matrix()
sp_filter_offshore <- mFD::sp.filter(asb_nm          = c("Offshore"),
sp_faxes_coord = sp_3D_coord,
asb_sp_w       = hab_sp_occ)
sp_2d_coord_final_offshore <- sp_filter_offshore$`species coordinates`[, c("PC1", "PC2")]
sp_thermal_offshore <- sp_2d_coord_final_offshore %>%
as.data.frame() %>%
rownames_to_column("Species") %>%
left_join(add_thermal, by="Species")
# compute FRic for all habitats  ---
Fric_offshore <- alpha.fd.multidim(sp_faxes_coord = sp_3D_coord,
asb_sp_w = offshore_occ_thermal,
ind_vect = c("fric"),
scaling = TRUE,
details_returned = TRUE)
## retrieve names of main input:
asb_fd_ind <- Fric_offshore$functional_diversity_indices
fd_details <- Fric_offshore$details
## get coordinates of species:
sp_faxes_coord <- fd_details$sp_faxes_coord
## get number of dimensions in input:
nb_dim <- ncol(sp_faxes_coord)
faxes               = NULL
faxes_nm            = NULL
range_faxes         = c(NA, NA)
# vertices in trop:
vert_trop_offshore <- Fric_offshore$details$asb_vert_nm$tropical
# vertices in temp:
vert_temp_offshore <- Fric_offshore$details$asb_vert_nm$temperate
vert_trop_offshore
vert_temp_offshore
faxes               = NULL
faxes_nm            = NULL
range_faxes         = c(NA, NA)
plot_asb_nm <- c("temperate", "tropical")
plot_sp_nm <- c("Aulostomus_chinensis", "Caesio_caerulaurea", "Chaetodon_kleinii",
"Halichoeres_margaritaceus", "Hologymnosus_annulatus", "Leptojulis_cyanopleura",
"Mulloidichthys_vanicolensis", "Siganus_fuscescens", "Stegastes_gascoynei",
"Thalassoma_jansenii", "Thalassoma_lunare",
"Achoerodus_viridis", "Chaetodon_guentheri", "Kyphosus_sydneyanus", "Parma_unifasciata",
"Parupeneus_spilurus", "Pempheris_affinis", "Pseudocaranx_dentex","Pseudolabrus_luculentus",
"Scorpis_lineolata")
# give faxes identity if faxes set to NULL:
if (is.null(faxes)) {
faxes <- colnames(sp_faxes_coord)[1:min(c(4, nb_dim))]
}
# give faxes names if faxes set to NULL:
if (is.null(faxes_nm)) {
faxes_nm <- faxes
}
names(faxes_nm) <- faxes
# get number of axes:
nb_faxes <- length(faxes)
# get combinations of axes on plot:
axes_plot <- utils::combn(faxes, 2)
plot_nb   <- ncol(axes_plot)
# set range of axes if c(NA, NA):
if (is.na(range_faxes[1]) && is.na(range_faxes[2])) {
range_sp_coord  <- range(sp_faxes_coord)
range_faxes <- range_sp_coord +
c(-1, 1) * (range_sp_coord[2] - range_sp_coord[1]) * 0.1
}
# create a dataframe with species coordinates and option (vertices + label)
sp_faxes_coord_plot <- data.frame(sp_faxes_coord, label = "")
if (! is.null(plot_sp_nm)) {
sp_faxes_coord_plot[plot_sp_nm, "label"] <- plot_sp_nm
}
# get vertices of the convex hull of the species pool:
vert_pool <- fd_details$pool_vert_nm
# get names of assemblages:
pool <- "pool"
asb1 <- plot_asb_nm[1]
nm_asb <- asb1
asb2 <- plot_asb_nm[2]
nm_asb <- paste(nm_asb, asb2, sep = "_")
sp_asb1 <- names(which(fd_details$asb_sp_occ[asb1, ] == 1))
sp_asb2 <- names(which(fd_details$asb_sp_occ[asb2, ] == 1))
# list to store ggplot
ggplot_offshore <- list()
for (z in (1:plot_nb)) {
# names of axes
xy_z <- axes_plot[1:2, z]
# get species coordinates along the 2 axes:
sp_coord_xy <- as.matrix(sp_faxes_coord_plot[, xy_z])
colnames(sp_coord_xy) <- c("x", "y")
# list with dataframes for plot:
asb_sp_coord2D_k <- list()
asb_sp_coord2D_k[["asb1"]] <- sp_coord_xy[sp_asb1, ]
vertices_nD_k <- list()
vertices_nD_k[["asb1"]] <- fd_details$asb_vert_nm[[asb1]]
asb_sp_coord2D_k[["asb2"]] <- sp_coord_xy[sp_asb2, ]
vertices_nD_k[["asb2"]] <- fd_details$asb_vert_nm[[asb2]]
# plot convex hull of assemblage but not species
ggplot_z_offshore <-fric.plot(ggplot_bg = ggplot_z,
asb_sp_coord2D = asb_sp_coord2D_k,
asb_vertices_nD = vertices_nD_k,
plot_sp = TRUE,
color_sp = thermal_aff_colors,
fill_sp = c(asb1 = "white", asb2 = "white"),
size_sp = c(asb1 = 1, asb2 = 1),
shape_sp = c(asb1 = 16, asb2 = 16),
color_vert = thermal_aff_colors,
fill_vert = thermal_aff_colors,
size_vert = c(asb1 = 4, asb2 = 4),
shape_vert = c(asb1 = 16, asb2 = 16),
alpha_ch = c(asb1 = 0, asb2 = 0),
color_ch = c(asb1 = "#00C19A", asb2 =NA),
fill_ch = c(asb1 = NA, asb2 = NA))
# legend and title
if (z==1) {
ggplot_z_offshore <- ggplot_z_offshore  + labs(title = "offshore" )+
theme(plot.title = element_text(size = 20, color = "#00C19A"))
}
# add species names if needed:
if (! is.null(plot_sp_nm)) {
x <- NULL
y <- NULL
ggplot_z_offshore <- ggplot_z_offshore +
ggrepel::geom_text_repel(data = sp_faxes_coord_plot,
ggplot2::aes_string(x = xy_z[1],
y = xy_z[2],
label = "label"),
size = 3, colour= "black",
fontface = "plain",
max.overlaps = Inf,
box.padding = grid::unit(2, 'lines'),
force = 5,
arrow = grid::arrow(length = grid::unit(0.02,
'npc')),
segment.color = "black")
}
# legend and title
if (z==1) {
ggplot_z_offshore <- ggplot_z_offshore  + labs(title = "offshore" )+
theme(plot.title = element_text(size = 20, color = "#00C19A"))
}
# ggplot stored in list
ggplot_offshore[[z]] <- ggplot_z_offshore
}# end of z
ggplot_z_offshore
View(asb_sp_coord2D_k)
View(fd_details)
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(patchwork)
library(mFD)
# loading data
load(here::here("outputs", "sp_3D_coord.RData") )
load(here::here("data", "spatial_metadata.RData") )
load(here::here("data", "using biomass-maxN", "spatial_sp_biom.RData") )
load(here::here("outputs/", "using biomass-maxN", "spatial_fd_biomass.RData") )
load(here::here("data", "kelp_metadata.RData") )
load(here::here("data", "using biomass-maxN", "kelp_sp_maxN.RData") )
load(here::here("outputs/", "using biomass-maxN", "temporal_fd_kelp_biomass.RData") )
# vertices of all fe in 4D ----
pool_vert_nm <- spatial_fd$details$pool_vert_nm
# range of axes
range_faxes_coord <- range(sp_3D_coord)
range_axes <- range_faxes_coord +
c(-1, 1) * (range_faxes_coord[2] - range_faxes_coord[1]) * 0.1
spread_faxes <- range_axes[2] - range_axes[1]
# loading thermal affinity data:
thermal <- read.csv(here::here("data", "raw_data", "thermal_all.csv")) %>%
mutate(thermal_label= if_else(thermal>"23", "tropical", "temperate")) %>%
#column_to_rownames("Species") %>%
select(-thermal)
thermal_aff_colors <- c(temperate = "#2C6BAA", tropical = "lightsalmon1")
# background with axes range set + title
ggplot_z <- background.plot(range_faxes = range_axes,
faxes_nm = c("PC1", "PC2"),
color_bg = "grey95")
# convex hull of global species pool
ggplot_z <- pool.plot(ggplot_bg = ggplot_z,
sp_coord2D = sp_3D_coord,
vertices_nD = pool_vert_nm,
plot_pool = FALSE,
color_ch = "NA", fill_ch = "white", alpha_ch = 1)
sp_2d_coord <- sp_3D_coord[, c("PC1", "PC2")]
offshore_occ <- hab_sp_occ %>% # I'm sure there is an easier way to do this...
as.data.frame() %>%
rownames_to_column("Sites") %>%
filter(Sites == "Offshore") %>%
column_to_rownames("Sites") %>%
as.matrix()
offshore_occ_2 <- offshore_occ %>%
as.data.frame() %>%
gather(Species, Abundance, 1:53)
add_thermal <- left_join(offshore_occ_2, thermal, by= "Species")
offshore_occ_thermal <- add_thermal %>%
spread(Species, Abundance, fill=0) %>%
column_to_rownames("thermal_label") %>%
as.matrix()
sp_filter_offshore <- mFD::sp.filter(asb_nm          = c("Offshore"),
sp_faxes_coord = sp_3D_coord,
asb_sp_w       = hab_sp_occ)
sp_2d_coord_final_offshore <- sp_filter_offshore$`species coordinates`[, c("PC1", "PC2")]
# computing occurrences of species in each habitat
hab_sp_occ <- rbind(
Inshore = apply(spatial_sp_biom [spatial_metadata[which(spatial_metadata$Habitat=="Inshore"),"Code"],],2,max ),
Midshelf = apply(spatial_sp_biom [spatial_metadata[which(spatial_metadata$Habitat=="Midshelf"),"Code"],],2,max ),
Offshore = apply(spatial_sp_biom [spatial_metadata[which(spatial_metadata$Habitat=="Offshore"),"Code"],],2,max )
)
offshore_occ <- hab_sp_occ %>% # I'm sure there is an easier way to do this...
as.data.frame() %>%
rownames_to_column("Sites") %>%
filter(Sites == "Offshore") %>%
column_to_rownames("Sites") %>%
as.matrix()
offshore_occ_2 <- offshore_occ %>%
as.data.frame() %>%
gather(Species, Abundance, 1:53)
add_thermal <- left_join(offshore_occ_2, thermal, by= "Species")
offshore_occ_thermal <- add_thermal %>%
spread(Species, Abundance, fill=0) %>%
column_to_rownames("thermal_label") %>%
as.matrix()
sp_filter_offshore <- mFD::sp.filter(asb_nm          = c("Offshore"),
sp_faxes_coord = sp_3D_coord,
asb_sp_w       = hab_sp_occ)
sp_2d_coord_final_offshore <- sp_filter_offshore$`species coordinates`[, c("PC1", "PC2")]
sp_thermal_offshore <- sp_2d_coord_final_offshore %>%
as.data.frame() %>%
rownames_to_column("Species") %>%
left_join(add_thermal, by="Species")
# compute FRic for all habitats  ---
Fric_offshore <- alpha.fd.multidim(sp_faxes_coord = sp_2d_coord,
asb_sp_w = offshore_occ_thermal,
ind_vect = c("fric"),
scaling = TRUE,
details_returned = TRUE)
## retrieve names of main input:
asb_fd_ind <- Fric_offshore$functional_diversity_indices
fd_details <- Fric_offshore$details
## get coordinates of species:
sp_faxes_coord <- fd_details$sp_faxes_coord
## get number of dimensions in input:
nb_dim <- ncol(sp_faxes_coord)
# vertices in trop:
vert_trop_offshore <- Fric_offshore$details$asb_vert_nm$tropical
vert_trop_offshore
# vertices in temp:
vert_temp_offshore <- Fric_offshore$details$asb_vert_nm$temperate
vert_temp_offshore
faxes               = NULL
faxes_nm            = NULL
range_faxes         = c(NA, NA)
plot_asb_nm <- c("temperate", "tropical")
plot_sp_nm <- c("Aulostomus_chinensis", "Caesio_caerulaurea", "Halichoeres_margaritaceus",  "Leptojulis_cyanopleura",
"Siganus_fuscescens", "Stegastes_gascoynei", "Thalassoma_lunare",
"Achoerodus_viridis", "Kyphosus_sydneyanus", "Parma_unifasciata",
"Pseudocaranx_dentex","Pseudolabrus_luculentus",
"Scorpis_lineolata")
# give faxes identity if faxes set to NULL:
if (is.null(faxes)) {
faxes <- colnames(sp_faxes_coord)[1:min(c(4, nb_dim))]
}
# give faxes names if faxes set to NULL:
if (is.null(faxes_nm)) {
faxes_nm <- faxes
}
names(faxes_nm) <- faxes
# get number of axes:
nb_faxes <- length(faxes)
# get combinations of axes on plot:
axes_plot <- utils::combn(faxes, 2)
plot_nb   <- ncol(axes_plot)
# set range of axes if c(NA, NA):
if (is.na(range_faxes[1]) && is.na(range_faxes[2])) {
range_sp_coord  <- range(sp_faxes_coord)
range_faxes <- range_sp_coord +
c(-1, 1) * (range_sp_coord[2] - range_sp_coord[1]) * 0.1
}
# create a dataframe with species coordinates and option (vertices + label)
sp_faxes_coord_plot <- data.frame(sp_faxes_coord, label = "")
if (! is.null(plot_sp_nm)) {
sp_faxes_coord_plot[plot_sp_nm, "label"] <- plot_sp_nm
}
# get vertices of the convex hull of the species pool:
vert_pool <- fd_details$pool_vert_nm
# get names of assemblages:
pool <- "pool"
asb1 <- plot_asb_nm[1]
nm_asb <- asb1
asb2 <- plot_asb_nm[2]
nm_asb <- paste(nm_asb, asb2, sep = "_")
sp_asb1 <- names(which(fd_details$asb_sp_occ[asb1, ] == 1))
sp_asb2 <- names(which(fd_details$asb_sp_occ[asb2, ] == 1))
# list to store ggplot
ggplot_offshore <- list()
for (z in (1:plot_nb)) {
# names of axes
xy_z <- axes_plot[1:2, z]
# get species coordinates along the 2 axes:
sp_coord_xy <- as.matrix(sp_faxes_coord_plot[, xy_z])
colnames(sp_coord_xy) <- c("x", "y")
# list with dataframes for plot:
asb_sp_coord2D_k <- list()
asb_sp_coord2D_k[["asb1"]] <- sp_coord_xy[sp_asb1, ]
vertices_nD_k <- list()
vertices_nD_k[["asb1"]] <- fd_details$asb_vert_nm[[asb1]]
asb_sp_coord2D_k[["asb2"]] <- sp_coord_xy[sp_asb2, ]
vertices_nD_k[["asb2"]] <- fd_details$asb_vert_nm[[asb2]]
# plot convex hull of assemblage but not species
ggplot_z_offshore <-fric.plot(ggplot_bg = ggplot_z,
asb_sp_coord2D = asb_sp_coord2D_k,
asb_vertices_nD = vertices_nD_k,
plot_sp = TRUE,
color_sp = thermal_aff_colors,
fill_sp = c(asb1 = "white", asb2 = "white"),
size_sp = c(asb1 = 1, asb2 = 1),
shape_sp = c(asb1 = 16, asb2 = 16),
color_vert = thermal_aff_colors,
fill_vert = thermal_aff_colors,
size_vert = c(asb1 = 4, asb2 = 4),
shape_vert = c(asb1 = 16, asb2 = 16),
alpha_ch = c(asb1 = 0, asb2 = 0),
color_ch = c(asb1 = "#00C19A", asb2 =NA),
fill_ch = c(asb1 = NA, asb2 = NA))
# legend and title
if (z==1) {
ggplot_z_offshore <- ggplot_z_offshore  + labs(title = "offshore" )+
theme(plot.title = element_text(size = 20, color = "#00C19A"))
}
# add species names if needed:
if (! is.null(plot_sp_nm)) {
x <- NULL
y <- NULL
ggplot_z_offshore <- ggplot_z_offshore +
ggrepel::geom_text_repel(data = sp_faxes_coord_plot,
ggplot2::aes_string(x = xy_z[1],
y = xy_z[2],
label = "label"),
size = 3, colour= "black",
fontface = "plain",
max.overlaps = Inf,
box.padding = grid::unit(2, 'lines'),
force = 5,
arrow = grid::arrow(length = grid::unit(0.02,
'npc')),
segment.color = "black")
}
# legend and title
if (z==1) {
ggplot_z_offshore <- ggplot_z_offshore  + labs(title = "offshore" )+
theme(plot.title = element_text(size = 20, color = "#00C19A"))
}
# ggplot stored in list
ggplot_offshore[[z]] <- ggplot_z_offshore
}# end of z
ggplot_z_offshore
View(sp_thermal_offshore)
plot_sp_nm <- c("Aulostomus_chinensis", "Caesio_caerulaurea", "Halichoeres_margaritaceus",  "Leptojulis_cyanopleura",
"Siganus_fuscescens", "Stegastes_gascoynei", "Thalassoma_lunare","Halichoeres_margaritaceus",
"Leptojulis_cyanopleura", "Labroides_dimidiatus", "Mulloidichthys_vanicolensis",
"Naso_unicornis", "Plectorhinchus_flavomaculatus", "Paracanthurus_hepatus",
"Achoerodus_viridis", "Kyphosus_sydneyanus", "Parma_unifasciata", "Pempheris_affinis",
"Pseudocaranx_dentex","Pseudolabrus_luculentus",  "Scorpis_lineolata")
# give faxes identity if faxes set to NULL:
if (is.null(faxes)) {
faxes <- colnames(sp_faxes_coord)[1:min(c(4, nb_dim))]
}
# give faxes names if faxes set to NULL:
if (is.null(faxes_nm)) {
faxes_nm <- faxes
}
names(faxes_nm) <- faxes
# get number of axes:
nb_faxes <- length(faxes)
# get combinations of axes on plot:
axes_plot <- utils::combn(faxes, 2)
plot_nb   <- ncol(axes_plot)
# set range of axes if c(NA, NA):
if (is.na(range_faxes[1]) && is.na(range_faxes[2])) {
range_sp_coord  <- range(sp_faxes_coord)
range_faxes <- range_sp_coord +
c(-1, 1) * (range_sp_coord[2] - range_sp_coord[1]) * 0.1
}
# create a dataframe with species coordinates and option (vertices + label)
sp_faxes_coord_plot <- data.frame(sp_faxes_coord, label = "")
if (! is.null(plot_sp_nm)) {
sp_faxes_coord_plot[plot_sp_nm, "label"] <- plot_sp_nm
}
# get vertices of the convex hull of the species pool:
vert_pool <- fd_details$pool_vert_nm
# get names of assemblages:
pool <- "pool"
asb1 <- plot_asb_nm[1]
nm_asb <- asb1
asb2 <- plot_asb_nm[2]
nm_asb <- paste(nm_asb, asb2, sep = "_")
sp_asb1 <- names(which(fd_details$asb_sp_occ[asb1, ] == 1))
sp_asb2 <- names(which(fd_details$asb_sp_occ[asb2, ] == 1))
# list to store ggplot
ggplot_offshore <- list()
for (z in (1:plot_nb)) {
# names of axes
xy_z <- axes_plot[1:2, z]
# get species coordinates along the 2 axes:
sp_coord_xy <- as.matrix(sp_faxes_coord_plot[, xy_z])
colnames(sp_coord_xy) <- c("x", "y")
# list with dataframes for plot:
asb_sp_coord2D_k <- list()
asb_sp_coord2D_k[["asb1"]] <- sp_coord_xy[sp_asb1, ]
vertices_nD_k <- list()
vertices_nD_k[["asb1"]] <- fd_details$asb_vert_nm[[asb1]]
asb_sp_coord2D_k[["asb2"]] <- sp_coord_xy[sp_asb2, ]
vertices_nD_k[["asb2"]] <- fd_details$asb_vert_nm[[asb2]]
# plot convex hull of assemblage but not species
ggplot_z_offshore <-fric.plot(ggplot_bg = ggplot_z,
asb_sp_coord2D = asb_sp_coord2D_k,
asb_vertices_nD = vertices_nD_k,
plot_sp = TRUE,
color_sp = thermal_aff_colors,
fill_sp = c(asb1 = "white", asb2 = "white"),
size_sp = c(asb1 = 1, asb2 = 1),
shape_sp = c(asb1 = 16, asb2 = 16),
color_vert = thermal_aff_colors,
fill_vert = thermal_aff_colors,
size_vert = c(asb1 = 4, asb2 = 4),
shape_vert = c(asb1 = 16, asb2 = 16),
alpha_ch = c(asb1 = 0, asb2 = 0),
color_ch = c(asb1 = "#00C19A", asb2 =NA),
fill_ch = c(asb1 = NA, asb2 = NA))
# legend and title
if (z==1) {
ggplot_z_offshore <- ggplot_z_offshore  + labs(title = "offshore" )+
theme(plot.title = element_text(size = 20, color = "#00C19A"))
}
# add species names if needed:
if (! is.null(plot_sp_nm)) {
x <- NULL
y <- NULL
ggplot_z_offshore <- ggplot_z_offshore +
ggrepel::geom_text_repel(data = sp_faxes_coord_plot,
ggplot2::aes_string(x = xy_z[1],
y = xy_z[2],
label = "label"),
size = 3, colour= "black",
fontface = "plain",
max.overlaps = Inf,
box.padding = grid::unit(2, 'lines'),
force = 5,
arrow = grid::arrow(length = grid::unit(0.02,
'npc')),
segment.color = "black")
}
# legend and title
if (z==1) {
ggplot_z_offshore <- ggplot_z_offshore  + labs(title = "offshore" )+
theme(plot.title = element_text(size = 20, color = "#00C19A"))
}
# ggplot stored in list
ggplot_offshore[[z]] <- ggplot_z_offshore
}# end of z
ggplot_z_offshore
