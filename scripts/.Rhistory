legend.title = element_text(size=14), legend.text = element_text(size=14),
legend.background = element_blank(), legend.key=element_blank())
plot_shift3D
ggsave(plot_shift3D, file=here::here("outputs/", "Figure4_bis.png"),
height = 20, width = 18, unit = "cm" )
################################################################################
##
## Script for plotting filling of functional space by fish assemblages
##
## Code by Camille Magneville, SÃ©bastien VillÃ©ger and Paula Sgarlatta
##
################################################################################
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(patchwork)
library(mFD)
# loading data
load(here::here("outputs", "sp_3D_coord.RData") )
load(here::here("data", "spatial_metadata.RData") )
load(here::here("data", "spatial_sp_occ.RData") )
load(here::here("outputs/", "spatial_fd.RData") )
load(here::here("data", "kelp_metadata.RData") )
load(here::here("data", "kelp_sp_occ.RData") )
load(here::here("outputs/", "temporal_fd_kelp.RData") )
## settings ####
# coordinates of all species ----
pool_coord<-spatial_fd$details$sp_faxes_coord
# vertices of all fe in 4D ----
pool_vert_nm<-spatial_fd$details$pool_vert_nm
# range of axes
range_faxes_coord <- range(pool_coord[,1:3])
range_axes <- range_faxes_coord +
c(-1, 1) * (range_faxes_coord[2] - range_faxes_coord[1]) * 0.1
names(spatial_fd$details$asb_vert_nm)
## temporal kelp ####
# color code for the 4 years
years_colors <- c(y2002="green3", y2018="red3")
# computing occurrences of species in each habitat
kelp_years_sp_occ <- rbind(
y2002 = apply(kelp_sp_occ [kelp_metadata[which(kelp_metadata$Year=="2002"),"Code"],],2,max ),
y2018 = apply(kelp_sp_occ [kelp_metadata[which(kelp_metadata$Year=="2018"),"Code"],],2,max )
)
# compute FRic for kelp  ---
kelp_years_multidimFD<-alpha.fd.multidim(sp_faxes_coord = sp_3D_coord,
asb_sp_w = kelp_years_sp_occ,
ind_vect = c("fric"),
scaling = TRUE,
details_returned = TRUE
)
kelp_years_multidimFD$details
# FIde for kelp sites
# kelp_fide_years<- kelp_metadata %>%
#   mutate(Year=paste0("y",Year)) %>%
#   select(Year) %>%
#   bind_cols( select(temporal_fd_kelp$functional_diversity_indices, fide_PC1, fide_PC2 , fide_PC3) ) %>%
#   filter( Year %in% names(years_colors) )
## plotting  ####
# list to store ggplot
ggplot_temporal_kelp<-list()
# pairs of axes
pairs_axes<-list( c(1,2), c(1,3) )
for ( z in 1:length(pairs_axes) ) {
# names of axes
xy<-pairs_axes[[z]]
# background with axes range set + title
ggplot_z<-background.plot(range_faxes=range_axes,
faxes_nm=paste0("PC", xy),
color_bg="grey95")
# convex hull of species pool
ggplot_z<-pool.plot(ggplot_bg=ggplot_z,
sp_coord2D=pool_coord[,xy],
vertices_nD=pool_vert_nm,
plot_pool=FALSE,
color_ch=NA, fill_ch="white", alpha_ch=1)
# loop on years
for (h in row.names(kelp_years_sp_occ) ) {
# color given habitat
col_h<-as.character(years_colors[h])
# species present in v
sp_h<-names(which(kelp_years_multidimFD$details$asb_sp_occ[h,]==1))
# plot convex hull of assemblage but not species
ggplot_z<-fric.plot( ggplot_bg=ggplot_z,
asb_sp_coord2D=list(vv=pool_coord[sp_h,xy]),
asb_vertices_nD=list(vv=kelp_years_multidimFD$details$asb_vert_nm[[h]]),
plot_sp = FALSE,
# size_sp = c(vv=2),
# size_vert = c(vv=2),
# shape_sp = c(vv=12, 2),
# shape_vert = c(vv=12, 2),
# color_sp = c(vv=col_h),
color_ch=c(vv=col_h),
# color_vert = c(vv=col_h),
# fill_sp = c(vv=col_h),
# fill_vert = c(vv=col_h),
fill_ch=c(vv=col_h),
alpha_ch=c(vv=0.1)
)
}# end of h
# average position of species (in the 4 sites) for each year
ggplot_z <- ggplot_z +
#geom_point(data=kelp_fide_years, aes_string( x=paste0("fide_PC",xy[1]), y=paste0("fide_PC",xy[2]),
#color = "Year", shape = "Year"), size=0.9, show.legend = FALSE) +
scale_colour_manual( values = years_colors )
# legend and title
if (z==1) {
nlabels_y <- length(years_colors)
ggplot_z <- ggplot_z +
geom_text(aes(x = rep(range_axes[1]*0.85, nlabels_y ),
y = range_axes[2]*(1.05-0.15*(1:nlabels_y)),
label = names(years_colors) ),
color = years_colors,
hjust = "left",
show.legend = FALSE) +
ggtitle("Temporal - Kelp")
}
# ggplot stored in list
ggplot_temporal_kelp[[z]]<-ggplot_z
}# end of z
## spatial ####
# computing occurrences of species in each habitat
hab_sp_occ <- rbind(
Inshore = apply(spatial_sp_occ [spatial_metadata[which(spatial_metadata$Habitat=="Inshore"),"Code"],],2,max ),
Midshelf = apply(spatial_sp_occ [spatial_metadata[which(spatial_metadata$Habitat=="Midshelf"),"Code"],],2,max ),
Offshore = apply(spatial_sp_occ [spatial_metadata[which(spatial_metadata$Habitat=="Offshore"),"Code"],],2,max )
)
# compute FRic for all habitats  ---
hab_multidimFD<-alpha.fd.multidim(sp_faxes_coord = sp_3D_coord,
asb_sp_w = hab_sp_occ,
ind_vect = c("fric"),
scaling = TRUE,
details_returned = TRUE
)
# FIde
# fide_hab<- spatial_metadata %>%
#   select(Habitat) %>%
#   bind_cols( select(spatial_fd$functional_diversity_indices, fide_PC1, fide_PC2 , fide_PC3) )
# color code for the 3 habitats
hab_colors <- c(Inshore="gold1", Midshelf="red2", Offshore="blue3")
## plotting  ####
# list to store ggplot
ggplot_spatial<-list()
# pairs of axes
pairs_axes<-list( c(1,2), c(1,3) )
for ( a in 1:length(pairs_axes) ) {
# names of axes
xy<-pairs_axes[[a]]
# background with axes range set + title
ggplot_a<-background.plot(range_faxes=range_axes,
faxes_nm=paste0("PC", xy),
color_bg="grey95")
# convex hull of species pool
ggplot_a<-pool.plot(ggplot_bg=ggplot_a,
sp_coord2D=pool_coord[,xy],
vertices_nD=pool_vert_nm,
plot_pool=FALSE,
color_ch=NA, fill_ch="white", alpha_ch=1)
# loop on habitats
for (b in row.names(hab_sp_occ) ) {
# color given habitat
col_b<-as.character(hab_colors[b])
# species present in v
sp_b<-names(which(hab_multidimFD$details$asb_sp_occ[b,]==1))
# plot convex hull of assemblage but not species
ggplot_a<-fric.plot( ggplot_bg=ggplot_a,
asb_sp_coord2D=list(vv=pool_coord[sp_b,xy]),
asb_vertices_nD=list(vv=hab_multidimFD$details$asb_vert_nm[[b]]),
plot_sp = FALSE,
# size_sp = c(vv=2),
# size_vert = c(vv=2),
# shape_sp = c(vv=4),
# shape_vert = c(vv=7),
#color_sp = c(vv=col_b),
color_ch = c(vv=col_b),
#color_vert = c(vv=col_b),
#fill_vert = c(vv=col_b),
#fill_sp = c(vv=col_b),
fill_ch= c(vv=col_b),
alpha_ch = c(vv=0.1))
}# end of b
# average position of species (in the 3 sites) of each habitat
ggplot_a <- ggplot_a +
# geom_point(data=fide_hab, aes_string( x=paste0("fide_PC",xy[1]), y=paste0("fide_PC",xy[2]),
#                            color = "Habitat", shape = "Habitat"), size=0.9, show.legend = FALSE) +
scale_colour_manual( values = hab_colors )
# legend
if (a==1) {
nlabels_b <- length(hab_colors)
ggplot_a <- ggplot_a +
geom_text(aes(x = rep(range_axes[1]*0.85, nlabels_b ),
y = range_axes[2]*(1.05-0.15*(1:nlabels_b)),
label = names(hab_colors) ) ,
color = hab_colors ,
hjust = "left",
show.legend = FALSE) +
ggtitle("Spatial")
} #end of legend
# ggplot stored in list
ggplot_spatial[[a]] <- ggplot_a
}# end of a
## merging all plots into a single figure and saving as png ####
figure3 <- ( ggplot_temporal_kelp[[1]] + ggplot_spatial[[1]] ) / (
ggplot_temporal_kelp[[2]] + ggplot_spatial[[2]])
figure3
ggsave(figure3, file=here::here("outputs/", "Figure3_bis.png"),
height = 16, width = 24, unit = "cm" )
################################################################################
##
## Script for FD statistical analysis
##
##
## Paula Sgarlatta
##
################################################################################
rm(list=ls()) # cleaning memory
##Load packages
library(tidyverse)
library(dplyr)
library(car)
library(lme4)
library(glmmTMB)
library(DHARMa)
library(emmeans)
library(here)
load(here::here("outputs", "temporal_alpha_kelp.RData") )
load(here::here("outputs", "spatial_alpha.RData") )
load(here::here("outputs", "shift3D_kelp_stats.RData") )
load(here::here("outputs", "shift3D_space_stats.RData") )
## Preparing data for stats
kelp_stats <- temporal_alpha_kelp %>%
rownames_to_column(var = "Site1") %>%
mutate(Site=sub("_.*", "", Site1),Year=sub(".*_", "", Site1), .before="Site1")%>%
select(-Site1)
spatial_stats <- spatial_alpha %>%
rownames_to_column(var = "Site1") %>%
mutate(Site=sub("_.*", "", Site1),Habitat=sub(".*_", "", Site1), .before="Site1")%>%
select(-Site1)
####### GLMM
### KELP ###
kelp_s <- glmmTMB(sp_richn ~ Year + (1|Site), data=kelp_stats, family = poisson())
summary(kelp_s)
Anova(kelp_s)#Significant
system.time(mod_1 <- drop1(kelp_s, test = "Chisq", all.cols=TRUE))
print(mod_1)
kelp_res_s <- simulateResiduals(kelp_s)
plot(kelp_res_s) #Good
### SPACE ###
space_s <- glmmTMB (sp_richn ~ Habitat + (1|Site), data=spatial_stats, family = poisson())
summary(space_s)
Anova(space_s)#Significant
space_res_s <- simulateResiduals(space_s)
plot(space_res_s) #Good
kelp_fide3 <- glmmTMB(fide_PC3 ~ Year + (1|Site), data=kelp_stats, family = gaussian())
summary(kelp_fide3)
Anova(kelp_fide3) #Not significant - p=0.1684
kelp_fide3 <- glmmTMB(fide_PC3 ~ Year_cont + (1|Site), data=kelp_stats, family = gaussian())
kelp_stats$Year_cont <- as.numeric(kelp_stats$Year)
shift3D_kelp_stats$Year_cont <- as.numeric(shift3D_kelp_stats$Year)
kelp_shift <- lmer (shift3D ~ Year + (1|Site1), data=shift3D_kelp_stats)
kelp_shift <- lmer (shift3D ~ Yea_cont + (1|Site1), data=shift3D_kelp_stats)
kelp_shift <- lmer (shift3D ~ Year_cont + (1|Site1), data=shift3D_kelp_stats)
summary(kelp_shift)
Anova(kelp_shift)
system.time(shift_mod <- drop1(kelp_shift, test = "Chisq", all.cols=TRUE))
print(shift_mod)
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(patchwork)
# loading data
read.csv(here::here("from_paula", "SpatialUVC_metadata_transect.RData") )
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(patchwork)
# loading data
read.csv(here::here("from_paula", "SpatialUVC_metadata_transect.csv") )
load(here::here("outputs/", "spatial_alpha_transect.RData") )
load(here::here("data", "TemporalBRUV_species_metadata_kelp.RData") )
load(here::here("outputs/", "temporal_alpha_kelp_transect.RData") )
load(here::here("data", "TemporalBRUV_species_metadata_kelp.csv") )
load(here::here("from_paula", "TemporalBRUV_species_metadata_kelp.csv") )
read.csv(here::here("from_paula", "TemporalBRUV_species_metadata_kelp.csv") )
load(here::here("outputs/", "temporal_alpha_kelp_transect.RData") )
# loading data
spatial_metadata <- read.csv(here::here("from_paula", "SpatialUVC_metadata_transect.csv") )
spatial_all <- spatial_metadata %>%
left_join( rownames_to_column(spatial_alpha_transect, "Code"), by="Code" ) %>%
select(Code, Habitat, TRic=sp_richn, fric, fdis, fide_PC1, fide_PC2, fide_PC3)
# mean and sd of diversity among each site for each year in each habitat type
spatial_toplot <- spatial_all %>%
group_by(Habitat) %>%
summarise(
n = n(),
TRic_mean = mean(TRic),
TRic_sd = sd(TRic),
fric_mean = mean(fric),
fric_sd = sd(fric),
fdis_mean = mean(fdis),
fdis_sd = sd(fdis),
fide_PC1_mean = mean(fide_PC1),
fide_PC1_sd = sd(fide_PC1),
fide_PC2_mean = mean(fide_PC2),
fide_PC2_sd = sd(fide_PC2),
fide_PC3_mean = mean(fide_PC3),
fide_PC3_sd = sd(fide_PC3)
) %>%
mutate( TRic_se = TRic_sd/sqrt(n))  %>%
mutate( fric_se = fric_sd/sqrt(n)) %>%
mutate( fdis_se = fdis_sd/sqrt(n)) %>%
mutate( fide_PC1_se = fide_PC1_sd/sqrt(n)) %>%
mutate( fide_PC2_se = fide_PC2_sd/sqrt(n)) %>%
mutate( fide_PC3_se = fide_PC3_sd/sqrt(n))
spatial_toplot
# mean and sd of diversity among each site for each year in each habitat type
spatial_toplot <- spatial_all %>%
group_by(Habitat, Site) %>%
summarise(
n = n(),
TRic_mean = mean(TRic),
TRic_sd = sd(TRic),
fric_mean = mean(fric),
fric_sd = sd(fric),
fdis_mean = mean(fdis),
fdis_sd = sd(fdis),
fide_PC1_mean = mean(fide_PC1),
fide_PC1_sd = sd(fide_PC1),
fide_PC2_mean = mean(fide_PC2),
fide_PC2_sd = sd(fide_PC2),
fide_PC3_mean = mean(fide_PC3),
fide_PC3_sd = sd(fide_PC3)
) %>%
mutate( TRic_se = TRic_sd/sqrt(n))  %>%
mutate( fric_se = fric_sd/sqrt(n)) %>%
mutate( fdis_se = fdis_sd/sqrt(n)) %>%
mutate( fide_PC1_se = fide_PC1_sd/sqrt(n)) %>%
mutate( fide_PC2_se = fide_PC2_sd/sqrt(n)) %>%
mutate( fide_PC3_se = fide_PC3_sd/sqrt(n))
View(spatial_all)
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(patchwork)
library(mFD)
# metadata and data from sites without kelp
nokelp_metadata <- read.csv(here::here("data", "raw_data", "TemporalBRUV_nokelp_metadata.csv") )
head(nokelp_metadata)
unique(nokelp_metadata$Site) # 4 sites
unique(nokelp_metadata$Year) # 14 years
nokelp_sp_maxN <- read.csv(here::here("data", "raw_data", "TemporalBRUV_nokelp_species.csv") ) %>%
column_to_rownames("Code") %>%
as.matrix()
head(nokelp_sp_maxN)
nokelp <- read.csv(here::here("data", "raw_data", "TemporalBRUV_nokelp_species.csv") )
nokelp_summary <- mFD::asb.sp.summary(asb_sp_w = nokelp_sp_maxN)
nokelp_sp_occ <- nokelp_summary$asb_sp_occ
dim(nokelp_sp_occ) # 56 assemblages * 106 species
nokelp_sp <- colnames(nokelp_sp_occ)
length(nokelp_sp) # 106 sp
sum(kelp_sp %in% nokelp_sp)# 83 species shared
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(dplyr)
library(arsenal)
# traits of species from sites surveyed through years using BRUVs
# from sites with kelp
kelp_traits <- read.csv(here::here("from_paula", "TemporalBRUV_species_traits_kelp.csv"),
header = T)
head(kelp_traits)
names(kelp_traits) <- c("Species","Size", "Agg", "Position" , "Diet")
nrow(kelp_traits) # 101 sp
# from sites that never had kelp
nokelp_traits <- read.csv(here::here("from_paula", "TemporalBRUV_species_traits_no_kelp.csv"),
header = T)
head(nokelp_traits)
names(nokelp_traits) <- c("Species","Size", "Agg", "Position" , "Diet")
nrow(nokelp_traits) # 106 sp
write.csv(nokelp_traits, file=here::here("data", "raw_data", "nokelp_traits.csv"),
row.names = FALSE )
# loading raw data from csv----
nokelp_metadata <- read.csv(here::here("from_paula", "TemporalBRUV_species_metadata_no_kelp.csv"))
head(nokelp_metadata)
nokelp_replicates_maxN <- read.csv(here::here("from_paula", "TemporalBRUV_species_maxN_no_kelp.csv"))
head(nokelp_replicates_maxN)
# merging metadata and data
nokelp <- left_join(nokelp_metadata, nokelp_replicates_maxN, by=c("Code"="Site") )
head(nokelp)
# computing total biomass per site for each species ----
nokelp_sites_maxN <- nokelp %>%
pivot_longer(cols= contains("_"), names_to="species") %>%
mutate(value=as.numeric(value)) %>%
group_by(Site, Year, species) %>%
summarize(total=sum(value)) %>%
ungroup() %>%
pivot_wider(names_from = "species", values_from = "total") %>%
mutate(Code=paste(Site, Year,sep="_"), .before="Site")
head(nokelp_sites_maxN)
nokelp_replicates_maxN %>% select( contains("_") ) %>% sum()
nokelp_sites_maxN %>% select( contains("_") ) %>% sum()
# splitting into 2 tables ----
TemporalBRUV_nokelp_metadata <- nokelp_sites_maxN %>%
select(Code, Site, Year)
TemporalBRUV_nokelp_species <- nokelp_sites_maxN %>%
select( "Code", contains("_") )
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(dplyr)
library(arsenal)
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(patchwork)
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
# loading raw data from csv----
kelp_metadata <- read.csv(here::here("from_paula", "TemporalBRUV_species_metadata_kelp.csv"))
head(kelp_metadata)
kelp_replicates_maxN <- read.csv(here::here("from_paula", "TemporalBRUV_species_maxN_kelp.csv"))
head(kelp_replicates_maxN)
# merging metadata and data
kelp <- left_join(kelp_metadata, kelp_replicates_maxN, by=c("Code"="Site") )
head(kelp)
# computing total biomass per site for each species ----
kelp_sites_maxN <- kelp %>%
pivot_longer(cols= contains("_"), names_to="species") %>%
mutate(value=as.numeric(value)) %>%
group_by(Site, Year, species) %>%
summarize(total=sum(value)) %>%
ungroup() %>%
pivot_wider(names_from = "species", values_from = "total") %>%
mutate(Code=paste(Site, Year,sep="_"), .before="Site")
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
# loading raw data from csv----
kelp_metadata <- read.csv(here::here("from_paula", "TemporalBRUV_species_metadata_kelp.csv"))
head(kelp_metadata)
kelp_replicates_maxN <- read.csv(here::here("from_paula", "TemporalBRUV_species_maxN_kelp.csv"))
head(kelp_replicates_maxN)
# merging metadata and data
kelp <- left_join(kelp_metadata, kelp_replicates_maxN, by=c("Code"="Site") )
View(kelp_metadata)
View(kelp_replicates_maxN)
# merging metadata and data
kelp <- left_join(kelp_metadata, kelp_replicates_maxN, by="Code" )
head(kelp)
# computing total biomass per site for each species ----
kelp_sites_maxN <- kelp %>%
pivot_longer(cols= contains("_"), names_to="species") %>%
mutate(value=as.numeric(value)) %>%
group_by(Site, Year, species) %>%
summarize(total=sum(value)) %>%
ungroup() %>%
pivot_wider(names_from = "species", values_from = "total") %>%
mutate(Code=paste(Site, Year,sep="_"), .before="Site")
head(kelp_sites_maxN)
kelp_replicates_maxN %>% select( contains("_") ) %>% sum()
kelp_sites_maxN %>% select( contains("_") ) %>% sum()
# splitting into 2 tables ----
TemporalBRUV_kelp_metadata <- kelp_sites_maxN %>%
select(Code, Site, Year)
TemporalBRUV_kelp_species <- kelp_sites_maxN %>%
select( "Code", contains("_") )
## saving as csv ----
write.csv(TemporalBRUV_kelp_metadata, file=here::here("data", "raw_data", "TemporalBRUV_kelp_metadata.csv"), row.names = FALSE )
write.csv(TemporalBRUV_kelp_species, file=here::here("data", "raw_data", "TemporalBRUV_kelp_species.csv"), row.names= FALSE)
# loading raw data from csv----
nokelp_metadata <- read.csv(here::here("from_paula", "TemporalBRUV_species_metadata_no_kelp.csv"))
head(nokelp_metadata)
nokelp_replicates_maxN <- read.csv(here::here("from_paula", "TemporalBRUV_species_maxN_no_kelp.csv"))
head(nokelp_replicates_maxN)
# merging metadata and data
nokelp <- left_join(nokelp_metadata, nokelp_replicates_maxN, by="Code" )
View(nokelp_metadata)
View(nokelp_replicates_maxN)
# merging metadata and data
nokelp <- left_join(nokelp_metadata, nokelp_replicates_maxN, by=c("Code"="Site" ))
head(kelp)
head(nokelp)
View(nokelp)
# computing total biomass per site for each species ----
nokelp_sites_maxN <- nokelp %>%
pivot_longer(cols= contains("_"), names_to="species") %>%
mutate(value=as.numeric(value)) %>%
group_by(Site, Year, species) %>%
summarize(total=sum(value)) %>%
ungroup() %>%
pivot_wider(names_from = "species", values_from = "total") %>%
mutate(Code=paste(Site, Year,sep="_"), .before="Site")
head(nokelp_sites_maxN)
nokelp_replicates_maxN %>% select( contains("_") ) %>% sum()
nokelp_sites_maxN %>% select( contains("_") ) %>% sum()
# splitting into 2 tables ----
TemporalBRUV_nokelp_metadata <- nokelp_sites_maxN %>%
select(Code, Site, Year)
TemporalBRUV_nokelp_species <- nokelp_sites_maxN %>%
select( "Code", contains("_") )
## saving as csv ----
write.csv(TemporalBRUV_nokelp_metadata, file=here::here("data", "raw_data", "TemporalBRUV_nokelp_metadata.csv"), row.names = FALSE )
write.csv(TemporalBRUV_nokelp_species, file=here::here("data", "raw_data", "TemporalBRUV_nokelp_species.csv"), row.names= FALSE)
