thermal <- read.csv(here::here("data", "raw_data", "thermal_all.csv")) %>%
mutate(thermal_label= if_else(thermal>"23", "tropical", "temperate")) %>%
dplyr::select(-thermal)
# Add thermal aff to sp_faxes_coord:
sp_3D_coord <- spatial_fd$details$sp_faxes_coord
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(patchwork)
library(ggplot2)
library(mFD)
load(here::here("data", "funct_spaces.RData") )
load(here::here("data", "sp_faxes_coord.RData") )
load(here::here("data", "sp_tr.RData") )
load(here::here("data", "spatial_fd_biomass.RData"))
qual_space <- mFD::quality.fspaces.plot(
fspaces_quality            = funct_spaces,
quality_metric             = "mad",
fspaces_plot               = c("tree_average", "pcoa_2d", "pcoa_3d",
"pcoa_4d"),
name_file                  = NULL,
range_dist                 = NULL,
range_dev                  = NULL,
range_qdev                 = NULL,
gradient_deviation         = c(neg = "darkblue", nul = "grey80", pos = "darkred"),
gradient_deviation_quality = c(low = "yellow", high = "red"),
x_lab                      = "Trait-based distance")
plot(qual_space)
mAD_values <- funct_spaces$quality_fspaces
View(mAD_values)
write.csv(mAD_values, file=here::here("outputs", "mAD_values.csv"),
row.names = FALSE)
thermal <- read.csv(here::here("data", "raw_data", "thermal_all.csv")) %>%
mutate(thermal_label= if_else(thermal>"23", "tropical", "temperate")) %>%
dplyr::select(-thermal)
# Add thermal aff to sp_faxes_coord:
sp_3D_coord <- spatial_fd$details$sp_faxes_coord
sp_faxes_coord <- as.data.frame(sp_3D_coord) %>%
rownames_to_column("Species")
sp_faxes_coord <- inner_join(sp_faxes_coord, thermal,
by="Species")
# Change class of thermal_affinity column: character to factor:
sp_faxes_coord$thermal_label <- as.factor(sp_faxes_coord$thermal_label)
class(sp_faxes_coord$thermal_label) # ok
asb_sp <- sp_faxes_coord[, c(1, 5)]
asb_sp <- sp_faxes_coord[, c(1, 5)]
asb_sp_new <- asb_sp %>%
add_column(present = as.numeric(1)) %>%
pivot_wider(names_from = thermal_label, values_from = present)
asb_sp_new[is.na(asb_sp_new)] <- as.numeric(0)
asb_sp_new2 <- t(asb_sp_new)
colnames(asb_sp_new2) <- asb_sp_new2[1, ]
asb_sp_new2 <- asb_sp_new2[-1, ]
asb_sp_new3 <- as.data.frame(matrix(nrow = nrow(asb_sp_new2), ncol = ncol(asb_sp_new2)))#(s)
colnames(asb_sp_new3) <- colnames(asb_sp_new2)
rownames(asb_sp_new3) <- rownames(asb_sp_new2)
for (i in (1:nrow(asb_sp_new3))) {
for (j in (1:ncol(asb_sp_new3))) {
asb_sp_new3[i, j] <- as.numeric(asb_sp_new2[i, j])
}
}
asb_sp_new3 <- as.matrix(asb_sp_new3)
# vertices of all fe in 4D ----
pool_vert_nm <- spatial_fd$details$pool_vert_nm
# range of axes
range_faxes_coord <- range(sp_3D_coord[,1:3])
range_axes <- range_faxes_coord +
c(-1, 1) * (range_faxes_coord[2] - range_faxes_coord[1]) * 0.1
spread_faxes <- range_axes[2] - range_axes[1]
# compute FRic for all habitats  ---
Fric <- alpha.fd.multidim(sp_faxes_coord = sp_3D_coord,
asb_sp_w = asb_sp_new3,
ind_vect = c("fric"),
scaling = TRUE,
details_returned = TRUE)
thermal_aff_colors <- c(tropical = "lightsalmon1", temperate = "#2C6BAA")
# list to store ggplot
ggplot_pc <- list()
# pairs of axes
pairs_axes <- list(c(1,2), c(1,3), c(2, 3))
for (z in 1:length(pairs_axes)) {
# names of axes
xy <- pairs_axes[[z]]
# background with axes range set + title
ggplot_z <- background.plot(range_faxes = range_axes,
faxes_nm = paste0("PC", xy),
color_bg = "grey95")
# convex hull of global species pool
ggplot_z <- pool.plot(ggplot_bg = ggplot_z,
sp_coord2D = sp_3D_coord[,xy],
vertices_nD = pool_vert_nm,
plot_pool = FALSE,
color_ch = "black", fill_ch = "white", alpha_ch = 1)
# species present in trop:
sp_trop <- sp_faxes_coord$Species[which(sp_faxes_coord$thermal_label == "tropical")]
# species present in temp:
sp_temp <- sp_faxes_coord$Species[which(sp_faxes_coord$thermal_label == "temperate")]
# vertices in trop:
vert_trop <- Fric$details$asb_vert_nm$tropical
# vertices in temp:
vert_temp <- Fric$details$asb_vert_nm$temperate
# plot convex hull of assemblage but not species
ggplot_z2 <-fric.plot(ggplot_bg = ggplot_z,
asb_sp_coord2D = list(asb1 = sp_3D_coord[sp_trop, xy],
asb2 = sp_3D_coord[sp_temp, xy]),
asb_vertices_nD = list(asb1 = vert_trop,
asb2 = vert_temp),
plot_sp = TRUE,
color_sp = thermal_aff_colors,
fill_sp = c(asb1 = "white", asb2 = "white"),
size_sp = c(asb1 = 3, asb2 = 3),
shape_sp = c(asb1 = 16, asb2 = 16),
color_vert = thermal_aff_colors,
fill_vert = thermal_aff_colors,
size_vert = c(asb1 = 3, asb2 = 3),
shape_vert = c(asb1 = 16, asb2 = 16),
alpha_ch = c(asb1 = 0, asb2 = 0),
color_ch = c(asb1 = NA, asb2 = NA),
fill_ch = c(asb1 = NA, asb2 = NA))
# ggplot stored in list
ggplot_pc[[z]] <- ggplot_z2
}# end of z
# plot white basic window:
plot_caption <- ggplot2::ggplot(data.frame(x = range_axes,
y = range_axes),
ggplot2::aes(x = x, y = y)) +
ggplot2::scale_x_continuous(limits = range_axes, expand = c(0, 0)) +
ggplot2::scale_y_continuous(limits = range_axes, expand = c(0, 0)) +
ggplot2::theme_void() + ggplot2::theme(legend.position = "none") +
ggplot2::geom_rect(xmin = range_axes[1], xmax = range_axes[2],
ymin = range_axes[1], ymax = range_axes[2],
fill = "white", colour ="white")
## merging all plots into a single figure and saving as png ####
figure <- panels.to.patchwork(ggplot_pc, plot_caption = plot_caption)
figure3 <- ggplot_pc [[1]]
figure3
################################################################################
##
## Script for plotting:
##
##  *quality of functional space and relation between traits and PcoAs
##
##  *functional space with thermal affinity information (Figure 5)
##
##
## Code by Camille Magneville, Paula Sgarlatta and Sebastien Villeger
##
################################################################################
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(patchwork)
library(ggplot2)
library(mFD)
# loading data
load(here::here("data", "funct_spaces.RData") )
load(here::here("data", "sp_faxes_coord.RData") )
load(here::here("data", "sp_tr.RData") )
load(here::here("data", "spatial_fd_biomass.RData"))
## Illustrate quality of functional space
qual_space <- mFD::quality.fspaces.plot(
fspaces_quality            = funct_spaces,
quality_metric             = "mad",
fspaces_plot               = c("tree_average", "pcoa_2d", "pcoa_3d",
"pcoa_4d"),
name_file                  = NULL,
range_dist                 = NULL,
range_dev                  = NULL,
range_qdev                 = NULL,
gradient_deviation         = c(neg = "darkblue", nul = "grey80", pos = "darkred"),
gradient_deviation_quality = c(low = "yellow", high = "red"),
x_lab                      = "Trait-based distance")
plot(qual_space)
## Table with mAD values
mAD_values <- funct_spaces$quality_fspaces
### Test correlation between traits and functional axes:
#Change to full traits names
sp_tr <- sp_tr %>%
rename("Maximum reported length" = "Size","Common aggregation" = "Agg",
"Vertical position" = "Position")
cor_tr_faxes <- mFD::traits.faxes.cor(
sp_tr          = sp_tr,
sp_faxes_coord = sp_faxes_coord[, c("PC1", "PC2", "PC3")],
plot           = TRUE)
# get the table of correlation:
corr_table <- as.data.frame(cor_tr_faxes$tr_faxes_stat)  # Table S5
# get the plot:
plot_corr <- cor_tr_faxes$tr_faxes_plot
ggsave(plot_corr, file=here::here("outputs", "FigureS6.jpeg"),
height = 16, width = 30, unit = "cm" )
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(patchwork)
library(mFD)
library(ggpubr)
load(here::here("data", "sp_3D_coord.RData") )
load(here::here("data", "spatial_metadata.RData") )
load(here::here("data", "spatial_sp_biom.RData") )
load(here::here("data", "spatial_fd_biomass.RData") )
load(here::here("data", "kelp_metadata.RData") )
load(here::here("data", "kelp_sp_maxN.RData") )
load(here::here("data", "temporal_fd_kelp_biomass.RData") )
# vertices of all fe in 4D ----
pool_vert_nm <- spatial_fd$details$pool_vert_nm
# range of axes
range_faxes_coord <- range(sp_3D_coord)
range_axes <- range_faxes_coord +
c(-1, 1) * (range_faxes_coord[2] - range_faxes_coord[1]) * 0.1
spread_faxes <- range_axes[2] - range_axes[1]
# loading thermal affinity data:
thermal <- read.csv(here::here("data", "raw_data", "thermal_all.csv")) %>%
mutate(thermal_label= if_else(thermal>"23", "tropical", "temperate")) %>%
#column_to_rownames("Species") %>%
select(-thermal)
thermal_aff_colors <- c(temperate = "#2C6BAA", tropical = "lightsalmon1")
kelp_years_sp_occ <- rbind(
y2002 = apply(kelp_sp_maxN [kelp_metadata[which(kelp_metadata$Year=="2002"),"Code"],],2,max ),
y2003 = apply(kelp_sp_maxN [kelp_metadata[which(kelp_metadata$Year=="2003"),"Code"],],2,max ),
y2004 = apply(kelp_sp_maxN [kelp_metadata[which(kelp_metadata$Year=="2004"),"Code"],],2,max ),
y2005 = apply(kelp_sp_maxN [kelp_metadata[which(kelp_metadata$Year=="2005"),"Code"],],2,max ),
y2006 = apply(kelp_sp_maxN [kelp_metadata[which(kelp_metadata$Year=="2006"),"Code"],],2,max ),
y2007 = apply(kelp_sp_maxN [kelp_metadata[which(kelp_metadata$Year=="2007"),"Code"],],2,max ),
y2008 = apply(kelp_sp_maxN [kelp_metadata[which(kelp_metadata$Year=="2008"),"Code"],],2,max ),
y2009 = apply(kelp_sp_maxN [kelp_metadata[which(kelp_metadata$Year=="2009"),"Code"],],2,max ),
y2010 = apply(kelp_sp_maxN [kelp_metadata[which(kelp_metadata$Year=="2010"),"Code"],],2,max ),
y2011 = apply(kelp_sp_maxN [kelp_metadata[which(kelp_metadata$Year=="2011"),"Code"],],2,max ),
y2013 = apply(kelp_sp_maxN [kelp_metadata[which(kelp_metadata$Year=="2013"),"Code"],],2,max ),
y2015 = apply(kelp_sp_maxN [kelp_metadata[which(kelp_metadata$Year=="2015"),"Code"],],2,max ),
y2018 = apply(kelp_sp_maxN [kelp_metadata[which(kelp_metadata$Year=="2018"),"Code"],],2,max ))
# background with axes range set + title
ggplot_z <- background.plot(range_faxes = range_axes,
faxes_nm = c("PC1", "PC2"),
color_bg = "grey95")
# convex hull of global species pool
ggplot_z <- pool.plot(ggplot_bg = ggplot_z,
sp_coord2D = sp_3D_coord,
vertices_nD = pool_vert_nm,
plot_pool = FALSE,
color_ch = "NA", fill_ch = "white", alpha_ch = 1)
sp_2d_coord <- sp_3D_coord[, c("PC1", "PC2")]
kelp_2002_occ <- kelp_years_sp_occ %>% # I'm sure there is an easier way to do this...
as.data.frame() %>%
rownames_to_column("Sites") %>%
filter(Sites == "y2002") %>%
column_to_rownames("Sites") %>%
as.matrix()
kelp_2002_occ_2 <- kelp_2002_occ %>%
as.data.frame() %>%
gather(Species, Abundance, 1:101)
add_thermal <- left_join(kelp_2002_occ_2, thermal, by= "Species")
View(kelp_2002_occ)
View(kelp_2002_occ_2)
View(add_thermal)
View(thermal)
View(kelp_years_sp_occ)
View(kelp_sp_maxN)
View(spatial_fd)
View(sp_3D_coord)
rm(list=ls()) # cleaning memory
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(patchwork)
library(mFD)
library(ggpubr)
load(here::here("data", "sp_3D_coord.RData") )
load(here::here("data", "spatial_metadata.RData") )
load(here::here("data", "spatial_sp_biom.RData") )
load(here::here("data", "spatial_fd_biomass.RData") )
load(here::here("data", "kelp_metadata.RData") )
load(here::here("data", "kelp_sp_maxN.RData") )
load(here::here("data", "temporal_fd_kelp_biomass.RData") )
View(sp_3D_coord)
View(kelp_sp_maxN)
View(kelp_metadata)
View(spatial_fd)
View(spatial_metadata)
View(spatial_sp_biom)
View(temporal_fd_kelp)
View(sp_3D_coord)
sp_3D_coord <- sp_3D_coord %>%
rownames_to_column("Species") %>%
strsplit("Species", split = "_")
sp_3D_coord <- sp_3D_coord %>%
as.data.frame() %>%
rownames_to_column("Species") %>%
strsplit("Species", split = "_")
sp_3D_coord <- sp_3D_coord %>%
as.data.frame() %>%
rownames_to_column("Species")
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(patchwork)
library(mFD)
library(ggpubr)
# loading data
load(here::here("data", "sp_3D_coord.RData") )
load(here::here("data", "spatial_metadata.RData") )
load(here::here("data", "spatial_sp_biom.RData") )
load(here::here("data", "spatial_fd_biomass.RData") )
load(here::here("data", "kelp_metadata.RData") )
load(here::here("data", "kelp_sp_maxN.RData") )
load(here::here("data", "temporal_fd_kelp_biomass.RData") )
sp_3D_coord <- sp_3D_coord %>%
as.data.frame() %>%
rownames_to_column("Species") %>%
mutate(genus=sub("_.*", "", Species), sp=sub("_.*", "", Species))
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(patchwork)
library(mFD)
library(ggpubr)
# loading data
load(here::here("data", "sp_3D_coord.RData") )
load(here::here("data", "spatial_metadata.RData") )
load(here::here("data", "spatial_sp_biom.RData") )
load(here::here("data", "spatial_fd_biomass.RData") )
load(here::here("data", "kelp_metadata.RData") )
load(here::here("data", "kelp_sp_maxN.RData") )
load(here::here("data", "temporal_fd_kelp_biomass.RData") )
sp_3D_coord <- sp_3D_coord %>%
as.data.frame() %>%
rownames_to_column("Species") %>%
mutate(genus=sub("_.*", "", Species), sp=sub(".*_", "", Species))
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(patchwork)
library(mFD)
library(ggpubr)
load(here::here("data", "sp_3D_coord.RData") )
load(here::here("data", "spatial_metadata.RData") )
load(here::here("data", "spatial_sp_biom.RData") )
load(here::here("data", "spatial_fd_biomass.RData") )
load(here::here("data", "kelp_metadata.RData") )
load(here::here("data", "kelp_sp_maxN.RData") )
load(here::here("data", "temporal_fd_kelp_biomass.RData") )
sp_3D_coord <- sp_3D_coord %>%
as.data.frame() %>%
rownames_to_column("Species_2") %>%
mutate(genus=sub("_.*", "", Species_2), sp=sub(".*_", "", Species_2)) %>%
mutate(Species=paste(substr(genus, 1, 1), sp, sep = ". "))
sp_3D_coord <- sp_3D_coord %>%
as.data.frame() %>%
rownames_to_column("Species_2") %>%
mutate(genus=sub("_.*", "", Species_2), sp=sub(".*_", "", Species_2)) %>%
mutate(Species=paste(substr(genus, 1, 1), sp, sep = ". ")) %>%
select(-genus, -sp, -Species_2)
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(patchwork)
library(mFD)
library(ggpubr)
# loading data
load(here::here("data", "sp_3D_coord.RData") )
load(here::here("data", "spatial_metadata.RData") )
load(here::here("data", "spatial_sp_biom.RData") )
load(here::here("data", "spatial_fd_biomass.RData") )
load(here::here("data", "kelp_metadata.RData") )
load(here::here("data", "kelp_sp_maxN.RData") )
load(here::here("data", "temporal_fd_kelp_biomass.RData") )
# First, shorten species names
sp_3D_coord <- sp_3D_coord %>%
as.data.frame() %>%
rownames_to_column("Species_2") %>%
mutate(genus=sub("_.*", "", Species_2), sp=sub(".*_", "", Species_2)) %>%
mutate(Species=paste(substr(genus, 1, 1), sp, sep = ". ")) %>%
select(-genus, -sp, -Species_2)
sp_3D_coord <- sp_3D_coord %>%
as.data.frame() %>%
rownames_to_column("Species_2") %>%
mutate(genus=sub("_.*", "", Species_2), sp=sub(".*_", "", Species_2)) %>%
mutate(Species=paste(substr(genus, 1, 1), sp, sep = ". ")) %>%
select(-genus, -sp, -Species_2) %>%
column_to_rownames("Species") %>%
as.matrix()
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(patchwork)
library(mFD)
library(ggpubr)
# loading data
load(here::here("data", "sp_3D_coord.RData") )
load(here::here("data", "spatial_metadata.RData") )
load(here::here("data", "spatial_sp_biom.RData") )
load(here::here("data", "spatial_fd_biomass.RData") )
load(here::here("data", "kelp_metadata.RData") )
load(here::here("data", "kelp_sp_maxN.RData") )
load(here::here("data", "temporal_fd_kelp_biomass.RData") )
# First, shorten species names
sp_3D_coord <- sp_3D_coord %>%
as.data.frame() %>%
rownames_to_column("Species_2") %>%
mutate(genus=sub("_.*", "", Species_2), sp=sub(".*_", "", Species_2)) %>%
mutate(Species=paste(substr(genus, 1, 1), sp, sep = ". ")) %>%
select(-genus, -sp, -Species_2) %>%
column_to_rownames("Species")
sp_3D_coord <- as.matrix(sp_3D_coord)
View(spatial_metadata)
View(spatial_sp_biom)
View(kelp_sp_maxN)
kelp_sp_maxN <- kelp_sp_maxN %>%
pivot_longer(cols= contains("_"), names_to="species")
kelp_sp_maxN <- kelp_sp_maxN %>%
as.data.frame() %>%
pivot_longer(cols= contains("_"), names_to="species")
View(kelp_sp_maxN)
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(patchwork)
library(mFD)
library(ggpubr)
# loading data
load(here::here("data", "sp_3D_coord.RData") )
load(here::here("data", "spatial_metadata.RData") )
load(here::here("data", "spatial_sp_biom.RData") )
load(here::here("data", "spatial_fd_biomass.RData") )
load(here::here("data", "kelp_metadata.RData") )
load(here::here("data", "kelp_sp_maxN.RData") )
load(here::here("data", "temporal_fd_kelp_biomass.RData") )
View(kelp_sp_maxN)
kelp_sp_maxN <- kelp_sp_maxN %>%
as.data.frame() %>%
rownames_to_column("Site") %>%
pivot_longer(!Site, names_to="species", values_to="count")
kelp_sp_maxN <- kelp_sp_maxN %>%
as.data.frame() %>%
rownames_to_column("Site") %>%
pivot_longer(!Site, names_to="species", values_to="count") %>%
mutate(genus=sub("_.*", "", species), sp=sub(".*_", "", species)) %>%
mutate(Species=paste(substr(genus, 1, 1), sp, sep = ". ")) %>%
select(-genus, -sp, -species) %>%
## settings ####
# vertices of all fe in 4D ----
pool_vert_nm <- spatial_fd$details$pool_vert_nm
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(patchwork)
library(mFD)
library(ggpubr)
# loading data
load(here::here("data", "sp_3D_coord.RData") )
load(here::here("data", "spatial_metadata.RData") )
load(here::here("data", "spatial_sp_biom.RData") )
load(here::here("data", "spatial_fd_biomass.RData") )
load(here::here("data", "kelp_metadata.RData") )
load(here::here("data", "kelp_sp_maxN.RData") )
load(here::here("data", "temporal_fd_kelp_biomass.RData") )
kelp_sp_maxN <- kelp_sp_maxN %>%
as.data.frame() %>%
rownames_to_column("Site") %>%
pivot_longer(!Site, names_to="species", values_to="count") %>%
mutate(genus=sub("_.*", "", species), sp=sub(".*_", "", species)) %>%
mutate(Species=paste(substr(genus, 1, 1), sp, sep = ". ")) %>%
select(-genus, -sp, -species) %>%
## settings ####
# vertices of all fe in 4D ----
pool_vert_nm <- spatial_fd$details$pool_vert_nm
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(patchwork)
library(mFD)
library(ggpubr)
load(here::here("data", "sp_3D_coord.RData") )
load(here::here("data", "spatial_metadata.RData") )
load(here::here("data", "spatial_sp_biom.RData") )
load(here::here("data", "kelp_metadata.RData") )
load(here::here("data", "spatial_fd_biomass.RData") )
load(here::here("data", "kelp_sp_maxN.RData") )
load(here::here("data", "temporal_fd_kelp_biomass.RData") )
kelp_sp_maxN <- kelp_sp_maxN %>%
as.data.frame() %>%
rownames_to_column("Site") %>%
pivot_longer(!Site, names_to="species", values_to="count") %>%
mutate(genus=sub("_.*", "", species), sp=sub(".*_", "", species)) %>%
mutate(Species=paste(substr(genus, 1, 1), sp, sep = ". ")) %>%
select(-genus, -sp, -species) %>%
## settings ####
# vertices of all fe in 4D ----
pool_vert_nm <- spatial_fd$details$pool_vert_nm
library(dplyr)
kelp_sp_maxN <- kelp_sp_maxN %>%
as.data.frame() %>%
rownames_to_column("Site") %>%
pivot_longer(!Site, names_to="species", values_to="count") %>%
mutate(genus=sub("_.*", "", species), sp=sub(".*_", "", species)) %>%
mutate(Species=paste(substr(genus, 1, 1), sp, sep = ". ")) %>%
select(-genus, -sp, -species) %>%
## settings ####
# vertices of all fe in 4D ----
pool_vert_nm <- spatial_fd$details$pool_vert_nm
rm(list=ls()) # cleaning memory
