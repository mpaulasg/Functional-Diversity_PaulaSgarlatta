plot_pool = FALSE,
color_ch = "black", fill_ch = "white", alpha_ch = 1)
# get names of assemblages:
pool <- "pool"
plot_asb_nm <- c("spatial", "temporal", "both")
asb1 <- plot_asb_nm[1]
nm_asb <- asb1
asb2 <- plot_asb_nm[2]
nm_asb <- paste(nm_asb, asb2, sep = "_")
asb3 <- plot_asb_nm[3]
nm_asb <- paste(nm_asb, asb3, sep = "_")
sp_asb1 <- names(which(Fric$details$asb_sp_occ[asb1, ] == 1))
sp_asb2 <- names(which(Fric$details$asb_sp_occ[asb2, ] == 1))
sp_asb3 <- names(which(Fric$details$asb_sp_occ[asb3, ] == 1))
# list with dataframes for plot:
asb_sp_coord2D_k <- list()
asb_sp_coord2D_k[["asb1"]] <- sp_3D_coord[sp_asb1, ]
vertices_nD_k <- list()
vertices_nD_k[["asb1"]] <- Fric$details$asb_vert_nm[[asb1]]
asb_sp_coord2D_k[["asb2"]] <- sp_3D_coord[sp_asb2, ]
vertices_nD_k[["asb2"]] <- Fric$details$asb_vert_nm[[asb2]]
asb_sp_coord2D_k[["asb3"]] <- sp_3D_coord[sp_asb3, ]
vertices_nD_k[["asb3"]] <- Fric$details$asb_vert_nm[[asb3]]
# species present in space:
sp_spatial <- sp_faxes_coord$Species[which(sp_faxes_coord$data_type == "spatial")]
# species present in temporal:
sp_temporal <- sp_faxes_coord$Species[which(sp_faxes_coord$data_type == "temporal")]
# species present in both:
sp_both <- sp_faxes_coord$Species[which(sp_faxes_coord$data_type == "both")]
# vertices in spatial:
vert_spatial <- Fric$details$asb_vert_nm$spatial
# vertices in temporal:
vert_temporal <- Fric$details$asb_vert_nm$temporal
# vertices in both:
vert_both <- Fric$details$asb_vert_nm$both
# plot convex hull of assemblage but not species
ggplot_z2 <-fric.plot(ggplot_bg = ggplot_z,
asb_sp_coord2D = asb_sp_coord2D_k,
asb_vertices_nD = vertices_nD_k,
plot_sp = TRUE,
color_sp = data_colors,
fill_sp = c(asb1 = "white", asb2 = "white", asb3="white"),
size_sp = c(asb1 = 3, asb2 = 3, asb3=3),
shape_sp = c(asb1 = 16, asb2 = 16, asb=16),
color_vert = data_colors,
fill_vert = data_colors,
size_vert = c(asb1 = 3, asb2 = 3, asb3=3),
shape_vert = c(asb1 = 16, asb2 = 16, asb=16),
alpha_ch = c(asb1 = 0, asb2 = 0, asb3=0),
color_ch = c(asb1 = NA, asb2 = NA, asb3=NA),
fill_ch = c(asb1 = NA, asb2 = NA, asb3=NA))
# ggplot stored in list
ggplot_pc[[z]] <- ggplot_z2
}# end of z
ggplot_z2
# background with axes range set + title
ggplot_z <- background.plot(range_faxes = range_axes,
faxes_nm = paste0("PC", xy),
color_bg = "grey95")
# convex hull of global species pool
ggplot_z <- pool.plot(ggplot_bg = ggplot_z,
sp_coord2D = sp_3D_coord,
vertices_nD = pool_vert_nm,
plot_pool = FALSE,
color_ch = "black", fill_ch = "white", alpha_ch = 1)
ggplot_z
# plot convex hull of assemblage but not species
ggplot_z2 <-fric.plot(ggplot_bg = ggplot_z,
asb_sp_coord2D = asb_sp_coord2D_k,
asb_vertices_nD = vertices_nD_k,
plot_sp = TRUE,
color_sp = data_colors,
fill_sp = c(asb1 = "white", asb2 = "white", asb3="white"),
size_sp = c(asb1 = 3, asb2 = 3, asb3=3),
shape_sp = c(asb1 = 16, asb2 = 16, asb=16),
color_vert = data_colors,
fill_vert = data_colors,
size_vert = c(asb1 = 3, asb2 = 3, asb3=3),
shape_vert = c(asb1 = 16, asb2 = 16, asb=16),
alpha_ch = c(asb1 = 0, asb2 = 0, asb3=0),
color_ch = c(asb1 = NA, asb2 = NA, asb3=NA),
fill_ch = c(asb1 = NA, asb2 = NA, asb3=NA))
# ggplot stored in list
ggplot_pc[[z]] <- ggplot_z2
for (z in 1:length(pairs_axes)) {
# names of axes
xy <- pairs_axes[[z]]
# background with axes range set + title
ggplot_z <- background.plot(range_faxes = range_axes,
faxes_nm = paste0("PC", xy),
color_bg = "grey95")
# convex hull of global species pool
ggplot_z <- pool.plot(ggplot_bg = ggplot_z,
sp_coord2D = sp_3D_coord,
vertices_nD = pool_vert_nm,
plot_pool = FALSE,
color_ch = "black", fill_ch = "white", alpha_ch = 1)
# get names of assemblages:
pool <- "pool"
plot_asb_nm <- c("spatial", "temporal", "both")
asb1 <- plot_asb_nm[1]
nm_asb <- asb1
asb2 <- plot_asb_nm[2]
nm_asb <- paste(nm_asb, asb2, sep = "_")
asb3 <- plot_asb_nm[3]
nm_asb <- paste(nm_asb, asb3, sep = "_")
sp_asb1 <- names(which(Fric$details$asb_sp_occ[asb1, ] == 1))
sp_asb2 <- names(which(Fric$details$asb_sp_occ[asb2, ] == 1))
sp_asb3 <- names(which(Fric$details$asb_sp_occ[asb3, ] == 1))
# list with dataframes for plot:
asb_sp_coord2D_k <- list()
asb_sp_coord2D_k[["asb1"]] <- sp_3D_coord[sp_asb1, ]
vertices_nD_k <- list()
vertices_nD_k[["asb1"]] <- Fric$details$asb_vert_nm[[asb1]]
asb_sp_coord2D_k[["asb2"]] <- sp_3D_coord[sp_asb2, ]
vertices_nD_k[["asb2"]] <- Fric$details$asb_vert_nm[[asb2]]
asb_sp_coord2D_k[["asb3"]] <- sp_3D_coord[sp_asb3, ]
vertices_nD_k[["asb3"]] <- Fric$details$asb_vert_nm[[asb3]]
# species present in space:
sp_spatial <- sp_faxes_coord$Species[which(sp_faxes_coord$data_type == "spatial")]
# species present in temporal:
sp_temporal <- sp_faxes_coord$Species[which(sp_faxes_coord$data_type == "temporal")]
# species present in both:
sp_both <- sp_faxes_coord$Species[which(sp_faxes_coord$data_type == "both")]
# vertices in spatial:
vert_spatial <- Fric$details$asb_vert_nm$spatial
# vertices in temporal:
vert_temporal <- Fric$details$asb_vert_nm$temporal
# vertices in both:
vert_both <- Fric$details$asb_vert_nm$both
# plot convex hull of assemblage but not species
ggplot_z2 <-fric.plot(ggplot_bg = ggplot_z,
asb_sp_coord2D = asb_sp_coord2D_k,
asb_vertices_nD = vertices_nD_k,
plot_sp = TRUE,
color_sp = data_colors,
fill_sp = c(asb1 = "white", asb2 = "white", asb3="white"),
size_sp = c(asb1 = 3, asb2 = 3, asb3=3),
shape_sp = c(asb1 = 16, asb2 = 16, asb=16),
color_vert = data_colors,
fill_vert = data_colors,
size_vert = c(asb1 = 3, asb2 = 3, asb3=3),
shape_vert = c(asb1 = 16, asb2 = 16, asb=16),
alpha_ch = c(asb1 = 0, asb2 = 0, asb3=0),
color_ch = c(asb1 = NA, asb2 = NA, asb3=NA),
fill_ch = c(asb1 = NA, asb2 = NA, asb3=NA))
# ggplot stored in list
ggplot_pc[[z]] <- ggplot_z2
}# end of z
ggplot_z2
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(patchwork)
library(ggplot2)
library(mFD)
load(here::here("data", "funct_spaces.RData") )
load(here::here("data", "sp_faxes_coord.RData") )
load(here::here("data", "sp_tr.RData") )
load(here::here("data", "spatial_fd_biomass.RData"))
qual_space <- mFD::quality.fspaces.plot(
fspaces_quality            = funct_spaces,
quality_metric             = "mad",
fspaces_plot               = c("tree_average", "pcoa_2d", "pcoa_3d",
"pcoa_4d"),
name_file                  = NULL,
range_dist                 = NULL,
range_dev                  = NULL,
range_qdev                 = NULL,
gradient_deviation         = c(neg = "darkblue", nul = "grey80", pos = "darkred"),
gradient_deviation_quality = c(low = "yellow", high = "red"),
x_lab                      = "Trait-based distance")
plot(qual_space)
mAD_values <- funct_spaces$quality_fspaces
sp_tr <- sp_tr %>%
rename("Maximum reported length" = "Size","Common aggregation" = "Agg",
"Vertical position" = "Position")
cor_tr_faxes <- mFD::traits.faxes.cor(
sp_tr          = sp_tr,
sp_faxes_coord = sp_faxes_coord[, c("PC1", "PC2", "PC3")],
plot           = TRUE)
corr_table <- as.data.frame(cor_tr_faxes$tr_faxes_stat)  # Table S5
plot_corr <- cor_tr_faxes$tr_faxes_plot
ggsave(qual_space, file=here::here("outputs", "Figure_qual_space_extra.jpeg"),
height = 20, width = 50, unit = "cm" )
species_both <- read.csv(here::here("data", "species_both.csv")) %>%
mutate(type_data= if_else(data_1 == "temporal" & data_2 == "spatial", "both",
if_else(data_1 == "temporal" & data_2 == "no", "temporal","spatial"))) %>%
select(-data_1, -data_2)
# Add data type to sp_faxes_coord
sp_3D_coord <- spatial_fd$details$sp_faxes_coord
sp_faxes_coord <- as.data.frame(sp_3D_coord) %>%
rownames_to_column("Species")
sp_faxes_coord <- inner_join(sp_faxes_coord, species_both,
by="Species")
sp_faxes_coord$type_data <- as.factor(sp_faxes_coord$type_data)
class(sp_faxes_coord$type_data) # ok
asb_sp <- sp_faxes_coord[, c(1, 5)]
asb_sp_new <- asb_sp %>%
add_column(present = as.numeric(1)) %>%
pivot_wider(names_from = type_data, values_from = present)
asb_sp_new[is.na(asb_sp_new)] <- as.numeric(0)
asb_sp_new2 <- t(asb_sp_new)
colnames(asb_sp_new2) <- asb_sp_new2[1, ]
asb_sp_new2 <- asb_sp_new2[-1, ]
asb_sp_new3 <- as.data.frame(matrix(nrow = nrow(asb_sp_new2), ncol = ncol(asb_sp_new2)))#(s)
colnames(asb_sp_new3) <- colnames(asb_sp_new2)
rownames(asb_sp_new3) <- rownames(asb_sp_new2)
for (i in (1:nrow(asb_sp_new3))) {
for (j in (1:ncol(asb_sp_new3))) {
asb_sp_new3[i, j] <- as.numeric(asb_sp_new2[i, j])
}
}
asb_sp_new3 <- as.matrix(asb_sp_new3)
# vertices of all fe in 4D ----
pool_vert_nm <- spatial_fd$details$pool_vert_nm
# range of axes
range_faxes_coord <- range(sp_3D_coord[,1:3])
range_axes <- range_faxes_coord +
c(-1, 1) * (range_faxes_coord[2] - range_faxes_coord[1]) * 0.1
spread_faxes <- range_axes[2] - range_axes[1]
# compute FRic for all habitats  ---
Fric <- alpha.fd.multidim(sp_faxes_coord = sp_3D_coord,
asb_sp_w = asb_sp_new3,
ind_vect = c("fric"),
scaling = TRUE,
details_returned = TRUE)
data_colors <- c(spatial = "lightsalmon1", temporal = "seagreen4", both = "#2C6BAA")
# list to store ggplot
ggplot_pc <- list()
# background with axes range set + title
ggplot_z <- background.plot(range_faxes = range_axes,
faxes_nm = paste0("PC", xy),
color_bg = "grey95")
# convex hull of global species pool
ggplot_z <- pool.plot(ggplot_bg = ggplot_z,
sp_coord2D = sp_3D_coord,
vertices_nD = pool_vert_nm,
plot_pool = FALSE,
color_ch = "black", fill_ch = "white", alpha_ch = 1)
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
library(patchwork)
library(ggplot2)
library(mFD)
load(here::here("data", "funct_spaces.RData") )
load(here::here("data", "sp_faxes_coord.RData") )
load(here::here("data", "sp_tr.RData") )
load(here::here("data", "spatial_fd_biomass.RData"))
species_both <- read.csv(here::here("data", "species_both.csv")) %>%
mutate(type_data= if_else(data_1 == "temporal" & data_2 == "spatial", "both",
if_else(data_1 == "temporal" & data_2 == "no", "temporal","spatial"))) %>%
select(-data_1, -data_2)
# Add data type to sp_faxes_coord
sp_3D_coord <- spatial_fd$details$sp_faxes_coord
sp_faxes_coord <- as.data.frame(sp_3D_coord) %>%
rownames_to_column("Species")
sp_faxes_coord <- inner_join(sp_faxes_coord, species_both,
by="Species")
sp_faxes_coord$type_data <- as.factor(sp_faxes_coord$type_data)
class(sp_faxes_coord$type_data) # ok
asb_sp <- sp_faxes_coord[, c(1, 5)]
asb_sp_new <- asb_sp %>%
add_column(present = as.numeric(1)) %>%
pivot_wider(names_from = type_data, values_from = present)
asb_sp_new[is.na(asb_sp_new)] <- as.numeric(0)
asb_sp_new2 <- t(asb_sp_new)
colnames(asb_sp_new2) <- asb_sp_new2[1, ]
asb_sp_new2 <- asb_sp_new2[-1, ]
asb_sp_new3 <- as.data.frame(matrix(nrow = nrow(asb_sp_new2), ncol = ncol(asb_sp_new2)))#(s)
colnames(asb_sp_new3) <- colnames(asb_sp_new2)
rownames(asb_sp_new3) <- rownames(asb_sp_new2)
for (i in (1:nrow(asb_sp_new3))) {
for (j in (1:ncol(asb_sp_new3))) {
asb_sp_new3[i, j] <- as.numeric(asb_sp_new2[i, j])
}
}
asb_sp_new3 <- as.matrix(asb_sp_new3)
# vertices of all fe in 4D ----
pool_vert_nm <- spatial_fd$details$pool_vert_nm
# range of axes
range_faxes_coord <- range(sp_3D_coord[,1:3])
range_axes <- range_faxes_coord +
c(-1, 1) * (range_faxes_coord[2] - range_faxes_coord[1]) * 0.1
spread_faxes <- range_axes[2] - range_axes[1]
# compute FRic for all habitats  ---
Fric <- alpha.fd.multidim(sp_faxes_coord = sp_3D_coord,
asb_sp_w = asb_sp_new3,
ind_vect = c("fric"),
scaling = TRUE,
details_returned = TRUE)
data_colors <- c(spatial = "lightsalmon1", temporal = "seagreen4", both = "#2C6BAA")
# list to store ggplot
ggplot_pc <- list()
# background with axes range set + title
ggplot_z <- background.plot(range_faxes = range_axes,
faxes_nm = c("PC1", "PC2"),
color_bg = "grey95")
# convex hull of global species pool
ggplot_z <- pool.plot(ggplot_bg = ggplot_z,
sp_coord2D = sp_3D_coord,
vertices_nD = pool_vert_nm,
plot_pool = FALSE,
color_ch = "black", fill_ch = "white", alpha_ch = 1)
# get names of assemblages:
pool <- "pool"
plot_asb_nm <- c("spatial", "temporal", "both")
asb1 <- plot_asb_nm[1]
nm_asb <- asb1
asb2 <- plot_asb_nm[2]
nm_asb <- paste(nm_asb, asb2, sep = "_")
asb3 <- plot_asb_nm[3]
nm_asb <- paste(nm_asb, asb3, sep = "_")
sp_asb1 <- names(which(Fric$details$asb_sp_occ[asb1, ] == 1))
sp_asb2 <- names(which(Fric$details$asb_sp_occ[asb2, ] == 1))
sp_asb3 <- names(which(Fric$details$asb_sp_occ[asb3, ] == 1))
# list with dataframes for plot:
asb_sp_coord2D_k <- list()
asb_sp_coord2D_k[["asb1"]] <- sp_3D_coord[sp_asb1, ]
vertices_nD_k <- list()
vertices_nD_k[["asb1"]] <- Fric$details$asb_vert_nm[[asb1]]
asb_sp_coord2D_k[["asb2"]] <- sp_3D_coord[sp_asb2, ]
vertices_nD_k[["asb2"]] <- Fric$details$asb_vert_nm[[asb2]]
asb_sp_coord2D_k[["asb3"]] <- sp_3D_coord[sp_asb3, ]
vertices_nD_k[["asb3"]] <- Fric$details$asb_vert_nm[[asb3]]
# plot convex hull of assemblage but not species
ggplot_z2 <-fric.plot(ggplot_bg = ggplot_z,
asb_sp_coord2D = asb_sp_coord2D_k,
asb_vertices_nD = vertices_nD_k,
plot_sp = TRUE,
color_sp = data_colors,
fill_sp = c(asb1 = "white", asb2 = "white", asb3="white"),
size_sp = c(asb1 = 3, asb2 = 3, asb3=3),
shape_sp = c(asb1 = 16, asb2 = 16, asb=16),
color_vert = data_colors,
fill_vert = data_colors,
size_vert = c(asb1 = 3, asb2 = 3, asb3=3),
shape_vert = c(asb1 = 16, asb2 = 16, asb=16),
alpha_ch = c(asb1 = 0, asb2 = 0, asb3=0),
color_ch = c(asb1 = NA, asb2 = NA, asb3=NA),
fill_ch = c(asb1 = NA, asb2 = NA, asb3=NA))
ggplot_z2
ggsave(ggplot_z2, file=here::here("outputs",  "Figure1b.jpeg"),
height = 16, width = 30, unit = "cm" )
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
habitat <- read.csv(here::here("data", "using biomass-maxN", "habitat_solitaries_2012.csv"))
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
habitat <- read.csv(here::here("data", "raw_data", "habitat_solitaries_2012.csv"))
habitat_toplot <- habitat %>%
pivot_longer(cols= 4:10, names_to="Group") %>%
filter(Site!="Flat_top", Site!="Look_at_me_now") %>%
mutate(value=as.numeric(value)) %>%
group_by(Site, Habitat,Transect, Group) %>%
summarize(total=sum(value)) %>%
group_by(Site, Transect) %>%
mutate(percent_cover=(total*100/125)) %>% #125 points per transect
select(-total)
habitat_summary_habitat <-habitat_toplot%>%
group_by(Habitat, Group)%>%
summarise(Percent_cover_habitat=mean(percent_cover,na.rm=T),
n = n(), mean = mean(percent_cover), se = sd(percent_cover/sqrt(n))) %>%
mutate(se) %>%
group_by(Habitat) %>%
arrange(desc(Group)) %>%
mutate(
pos = cumsum(Percent_cover_habitat),
upper = pos + se/2,
lower = pos - se/2
) %>%
ungroup()
habitat_v3 <- ggplot(habitat_summary_habitat, aes(x=Habitat, y=Percent_cover_habitat, fill=Group)) +
geom_bar(stat="identity", width = 0.7) +
geom_errorbar(aes(ymin = lower, ymax = upper), width=0.09, position = "identity")+
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14), color = "black"), axis.title = element_text(size= (18)),
legend.key = element_rect(fill = "white"))+
labs(y="Percent cover (%)", x="") + scale_fill_discrete(name = "",
labels = c("Coral", "Ecklonia radiata", "Macroalgae", "Other invertebrates",
"Rock & sand", "Sponges & tunicates", "Turf & CCA"))
habitat_v3
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
habitat <- read.csv(here::here("data", "raw_data", "habitat_solitaries_2012.csv"))
habitat_toplot <- habitat %>%
pivot_longer(cols= 4:10, names_to="Group") %>%
filter(Site!="Flat_top", Site!="Look_at_me_now") %>%
mutate(value=as.numeric(value)) %>%
group_by(Site, Habitat,Transect, Group) %>%
summarize(total=sum(value)) %>%
group_by(Site, Transect) %>%
mutate(percent_cover=(total*100/125)) %>% #125 points per transect
select(-total)
habitat_summary <-habitat_toplot%>%
group_by(Habitat, Group)%>%
summarise(Percent_cover_habitat=mean(percent_cover,na.rm=T),
n = n(), mean = mean(percent_cover), se = sd(percent_cover/sqrt(n))) %>%
mutate(se) %>%
group_by(Habitat) %>%
arrange(desc(Group)) %>%
mutate(
pos = cumsum(Percent_cover_habitat),
upper = pos + se/2,
lower = pos - se/2
) %>%
ungroup() %>%
filter(mean > 1)
habitat_v3 <- ggplot(habitat_summary, aes(x=Habitat, y=Percent_cover_habitat, fill=Group)) +
geom_bar(stat="identity", width = 0.7, size = 1, color = "black") +
geom_errorbar(aes(ymin = lower, ymax = upper), size = 0.8, width=0.1, position = "identity", color = "black")+
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (18), color = "black"), axis.title = element_text(size= (18)),
legend.key = element_rect(fill = "white"), legend.text = element_text(size=20))+
labs(y="Percent cover (%)", x="") + scale_fill_discrete(name = "",
labels = c("Coral", "Ecklonia radiata", "Macroalgae", "Other invertebrates",
"Rock & sand", "Sponges & tunicates", "Turf & CCA"))
habitat_v3
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(dplyr)
library(patchwork)
library(sp)
library(rgdal)
library(raster)
library(rgeos)
library(ggplot2)
library(ozmaps)
library(cowplot)
library(ggspatial)
library(here)
habitat <- read.csv(here::here("data", "raw_data", "habitat_solitaries_2012.csv"))
habitat_toplot <- habitat %>%
pivot_longer(cols= 4:10, names_to="Group") %>%
filter(Site!="Flat_top", Site!="Look_at_me_now") %>%
mutate(value=as.numeric(value)) %>%
group_by(Site, Habitat,Transect, Group) %>%
summarize(total=sum(value)) %>%
group_by(Site, Transect) %>%
mutate(percent_cover=(total*100/125)) %>% #125 points per transect
select(-total)
habitat_summary <-habitat_toplot%>%
group_by(Habitat, Group)%>%
summarise(Percent_cover_habitat=mean(percent_cover,na.rm=T),
n = n(), mean = mean(percent_cover), se = sd(percent_cover/sqrt(n))) %>%
mutate(se) %>%
group_by(Habitat) %>%
arrange(desc(Group)) %>%
mutate(
pos = cumsum(Percent_cover_habitat),
upper = pos + se/2,
lower = pos - se/2
) %>%
ungroup() %>%
filter(mean > 1)
habitat_toplot <- habitat %>%
pivot_longer(cols= 4:10, names_to="Group") %>%
filter(Site!="Flat_top", Site!="Look_at_me_now") %>%
mutate(value=as.numeric(value)) %>%
group_by(Site, Habitat,Transect, Group) %>%
summarize(total=sum(value)) %>%
group_by(Site, Transect) %>%
mutate(percent_cover=(total*100/125)) %>% #125 points per transect
select(-total)
habitat_toplot <- habitat %>%
pivot_longer(cols= 4:10, names_to="Group") %>%
filter(Site!="Flat_top", Site!="Look_at_me_now") %>%
mutate(value=as.numeric(value)) %>%
group_by(Site, Habitat,Transect, Group) %>%
summarize(total=sum(value)) %>%
group_by(Site, Transect) %>%
mutate(percent_cover=(total*100/125)) %>% #125 points per transect
dplyr::select(-total)
habitat_summary <-habitat_toplot%>%
group_by(Habitat, Group)%>%
summarise(Percent_cover_habitat=mean(percent_cover,na.rm=T),
n = n(), mean = mean(percent_cover), se = sd(percent_cover/sqrt(n))) %>%
mutate(se) %>%
group_by(Habitat) %>%
arrange(desc(Group)) %>%
mutate(
pos = cumsum(Percent_cover_habitat),
upper = pos + se/2,
lower = pos - se/2
) %>%
ungroup() %>%
filter(mean > 1)
habitat_v3 <- ggplot(habitat_summary, aes(x=Habitat, y=Percent_cover_habitat, fill=Group)) +
geom_bar(stat="identity", width = 0.7, size = 1, color = "black") +
geom_errorbar(aes(ymin = lower, ymax = upper), size = 0.8, width=0.1, position = "identity", color = "black")+
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (18), color = "black"), axis.title = element_text(size= (18)),
legend.key = element_rect(fill = "white"), legend.text = element_text(size=20))+
labs(y="Percent cover (%)", x="") + scale_fill_discrete(name = "",
labels = c("Coral", "Ecklonia radiata", "Macroalgae", "Other invertebrates",
"Rock & sand", "Sponges & tunicates", "Turf & CCA"))
habitat_v3
ggsave(habitat_v3, file=here::here("outputs", "FigureS8.jpeg"),
height = 16, width = 24, unit = "cm" )
