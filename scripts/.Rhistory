load(here::here("outputs/", "temporal_alpha_nokelp.RData") )
## spatial trends ####
# merging metadata and biodiv indices in a single table for each habitat type
spatial_all <- spatial_metadata %>%
left_join( rownames_to_column(spatial_alpha, "Code"), by="Code" ) %>%
select(Code, Habitat, TRic=sp_richn, fric, fdis, fide_PC1, fide_PC2, fide_PC3)
# mean and sd of diversity among each site for each year in each habitat type
spatial_toplot <- spatial_all %>%
group_by(Habitat) %>%
summarise(
n = n(),
TRic_mean = mean(TRic),
TRic_sd = sd(TRic),
fric_mean = mean(fric),
fric_sd = sd(fric),
fdis_mean = mean(fdis),
fdis_sd = sd(fdis),
fide_PC1_mean = mean(fide_PC1),
fide_PC1_sd = sd(fide_PC1),
fide_PC2_mean = mean(fide_PC2),
fide_PC2_sd = sd(fide_PC2),
fide_PC3_mean = mean(fide_PC3),
fide_PC3_sd = sd(fide_PC3)
) %>%
mutate( TRic_se = TRic_sd/sqrt(n))  %>%
mutate( fric_se = fric_sd/sqrt(n)) %>%
mutate( fdis_se = fdis_sd/sqrt(n)) %>%
mutate( fide_PC1_se = fide_PC1_sd/sqrt(n)) %>%
mutate( fide_PC2_se = fide_PC2_sd/sqrt(n)) %>%
mutate( fide_PC3_se = fide_PC3_sd/sqrt(n))
spatial_toplot
# color code for the 3 habitats
hab_colors <- c(Inshore= "#2C6BAA", Midshelf= "lightsalmon1", Offshore="firebrick3")
# taxonomic ----
plot_spatial_taxo <- ggplot(spatial_toplot) +
geom_bar( aes(x=Habitat, y=TRic_mean, color = Habitat, fill = Habitat), stat="identity", color = "black", size=0.8) +
geom_errorbar( aes(x=Habitat, ymin=TRic_mean-TRic_se, ymax=TRic_mean+TRic_se), width=0.1, size=0.8, colour="black" ) +
scale_color_manual(values=hab_colors) +
scale_fill_manual(values=hab_colors) +
scale_y_continuous( limits = c(0,25), breaks = seq(from=0, to=35, by=5)  ) +
labs(x="", y="Species richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.position = "none", axis.text.x = element_blank())
plot_spatial_taxo
# functional ----
plot_spatial_func <- ggplot(spatial_toplot) +
geom_bar( aes(x=Habitat, y=fric_mean, color = Habitat, fill = Habitat), stat="identity", color = "black", size=0.8) +
geom_errorbar( aes(x=Habitat, ymin=fric_mean-fric_se, ymax=fric_mean+fric_se), width=0.1, size=0.8, colour="black" ) +
scale_color_manual(values=hab_colors) +
scale_fill_manual(values=hab_colors) +
scale_y_continuous( limits = c(0,0.4), breaks = seq(from=0, to=0.4, by=0.1)  ) +
labs(x="", y="Functional richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.position = "none")
plot_spatial_func
## temporal trends ####
# merging metadata and biodiv indices in a single table for each habitat
temporal_kelp<- kelp_metadata %>%
mutate(Habitat="kelp") %>%
left_join( rownames_to_column(temporal_alpha_kelp, "Code"), by="Code" ) %>%
select(Code, Site, Year, Habitat, TRic=sp_richn, fric, fdis, fide_PC1, fide_PC2, fide_PC3 )
temporal_nokelp<- nokelp_metadata %>%
mutate(Habitat="no_kelp") %>%
left_join( rownames_to_column(temporal_alpha_nokelp, "Code"), by="Code" ) %>%
select(Code, Site, Year, Habitat, TRic=sp_richn, fric, fdis, fide_PC1, fide_PC2, fide_PC3)
# merging values for the 2 habitat types
temporal_all <- bind_rows(temporal_kelp, temporal_nokelp )
head(temporal_all)
# mean and sd of diversity among each site for each year in each habitat type
temporal_toplot <- temporal_all %>%
group_by(Year, Habitat) %>%
summarise(
n = n(),
TRic_mean = mean(TRic),
TRic_sd = sd(TRic),
fric_mean = mean(fric),
fric_sd = sd(fric),
fdis_mean = mean(fdis),
fdis_sd = sd(fdis),
fide_PC1_mean = mean(fide_PC1),
fide_PC1_sd = sd(fide_PC1),
fide_PC2_mean = mean(fide_PC2),
fide_PC2_sd = sd(fide_PC2),
fide_PC3_mean = mean(fide_PC3),
fide_PC3_sd = sd(fide_PC3)
) %>%
mutate( TRic_se = TRic_sd/sqrt(n))  %>%
mutate( fric_se = fric_sd/sqrt(n)) %>%
mutate( fdis_se = fdis_sd/sqrt(n)) %>%
mutate( fide_PC1_se = fide_PC1_sd/sqrt(n)) %>%
mutate( fide_PC2_se = fide_PC2_sd/sqrt(n)) %>%
mutate( fide_PC3_se = fide_PC3_sd/sqrt(n))
temporal_toplot
unique(temporal_toplot$Year)
# color code for kelp/no kelp
year_colors <- c(kelp= "seagreen4", no_kelp= "seagreen2")
# taxonomic ----
plot_tempo_taxo <- ggplot(temporal_toplot,
mapping=aes(color = Habitat, fill = Habitat) ) +
geom_point( aes(x=Year, y=TRic_mean), stat="identity", size=3) +
geom_line(aes(x= Year, y= TRic_mean) , stat="identity", size=1)+
geom_errorbar( aes(x=Year, ymin=TRic_mean-TRic_se, ymax=TRic_mean+TRic_se), width=0.4, size=0.8) +
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
scale_y_continuous( limits = c(15,40), breaks = seq(from=15, to=40, by=5)  ) +
scale_color_manual(values=year_colors) +
scale_fill_manual(values=year_colors) +
labs(x="", y="Species richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.position = "none")
plot_tempo_taxo
# functional ----
plot_tempo_func <- ggplot(temporal_toplot,
mapping=aes(color = Habitat, fill = Habitat) ) +
geom_point( aes(x=Year, y=fric_mean), stat="identity", size=2, shape=16) +
geom_line(aes(x= Year, y= fric_mean) , stat="identity", size=1)+
geom_errorbar( aes(x=Year, ymin=fric_mean-fric_se, ymax=fric_mean+fric_se), width=0.4, size=0.8) +
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
scale_y_continuous( limits = c(0.4,0.8), breaks = seq(from=0.4, to=0.8, by=0.2)  ) +
scale_color_manual(values=year_colors, name="Habitat", breaks = c("kelp", "no_kelp"), labels=c("Kelp", "No kelp")) +
scale_fill_manual(values=year_colors, name="Habitat", breaks = c("kelp", "no_kelp"), labels=c("Kelp", "No kelp")) +
labs(x="", y="Functional richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.title = element_text(size=14), legend.text = element_text(size=14),
legend.background = element_blank(), legend.key=element_blank())
plot_tempo_func
## Something like this?
fric <- ggplot(temporal_toplot, aes (x= Year,y = fric_mean, color=Habitat)) +
geom_point()+
geom_smooth(method = "lm")+
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
scale_y_continuous( limits = c(0.4,0.8), breaks = seq(from=0.4, to=0.8, by=0.2)  ) +
scale_color_manual(values=year_colors, name="Habitat", breaks = c("kelp", "no_kelp"), labels=c("Kelp", "No kelp")) +
scale_fill_manual(values=year_colors, name="Habitat", breaks = c("kelp", "no_kelp"), labels=c("Kelp", "No kelp")) +
labs(x="", y="Functional richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.title = element_text(size=14), legend.text = element_text(size=14),
legend.background = element_blank(), legend.key=element_blank())
## merging all plot into a single figure and saving as png ####
figure1 <- ( plot_spatial_taxo + plot_tempo_taxo ) / ( plot_spatial_func +  plot_tempo_func )
ggsave(figure1, file=here::here("outputs/", "figure1.png"),
height = 22, width = 25, unit = "cm" )
ggsave(fric, file=here::here("outputs/", "figure1_extra.png"),
height = 22, width = 25, unit = "cm" )
#################################################### FDis ############################################################
plot_spatial_fdis <- ggplot(spatial_toplot) +
geom_bar( aes(x=Habitat, y=fdis_mean, color = Habitat, fill = Habitat), stat="identity", color = "black", size=0.8) +
geom_errorbar( aes(x=Habitat, ymin=fdis_mean-fdis_se, ymax=fdis_mean+fdis_se), width=0.1, size=0.8, colour="black" ) +
scale_color_manual(values=hab_colors) +
scale_fill_manual(values=hab_colors) +
scale_y_continuous( limits = c(0,0.8), breaks = seq(from=0, to=0.8, by=0.2)  ) +
labs(x="", y="Functional dispersion") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.position = "none")
plot_spatial_fdis
plot_tempo_fdis <- ggplot(temporal_toplot,
mapping=aes(color = Habitat, fill = Habitat) ) +
geom_point( aes(x=Year, y=fdis_mean), stat="identity", size=3) +
geom_line(aes(x= Year, y= fdis_mean) , stat="identity", size=1)+
geom_errorbar( aes(x=Year, ymin=fdis_mean-fdis_se, ymax=fdis_mean+fdis_se), width=0.4, size=0.8) +
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
scale_y_continuous( limits = c(0,0.8), breaks = seq(from=0, to=0.8, by=0.1)  ) +
scale_color_manual(values=year_colors, name="Habitat", breaks = c("kelp", "no_kelp"), labels=c("Kelp", "No kelp")) +
scale_fill_manual(values=year_colors, name="Habitat", breaks = c("kelp", "no_kelp"), labels=c("Kelp", "No kelp")) +
labs(x="", y="Functional dispersion") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.title = element_text(size=14), legend.text = element_text(size=14),
legend.background = element_blank(), legend.key=element_blank())
plot_tempo_fdis
plot_tempo_fdis <- ggplot(temporal_toplot,
mapping=aes(color = Habitat, fill = Habitat) ) +
geom_point( aes(x=Year, y=fdis_mean), stat="identity", size=3) +
geom_line(aes(x= Year, y= fdis_mean) , stat="identity", size=1)+
geom_errorbar( aes(x=Year, ymin=fdis_mean-fdis_se, ymax=fdis_mean+fdis_se), width=0.4, size=0.8) +
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
scale_y_continuous( limits = c(0,0.8), breaks = seq(from=0, to=0.8, by=0.2)  ) +
scale_color_manual(values=year_colors, name="Habitat", breaks = c("kelp", "no_kelp"), labels=c("Kelp", "No kelp")) +
scale_fill_manual(values=year_colors, name="Habitat", breaks = c("kelp", "no_kelp"), labels=c("Kelp", "No kelp")) +
labs(x="", y="Functional dispersion") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.title = element_text(size=14), legend.text = element_text(size=14),
legend.background = element_blank(), legend.key=element_blank())
plot_tempo_fdis
## merging all plot into a single figure and saving as png ####
figure1_fdis <- ( plot_spatial_fdis + plot_tempo_fdis )
ggsave(figure1_fdis, file=here::here("outputs/", "figure1_fdis_B.png"),
height = 22, width = 35, unit = "cm" )
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
# loading raw data from csv----
nokelp_metadata <- read.csv(here::here("from_paula", "TemporalBRUV_species_metadata_no_kelp.csv"))
head(nokelp_metadata)
nokelp_replicates_maxN <- read.csv(here::here("from_paula", "TemporalBRUV_species_maxN_no_kelp.csv"))
head(nokelp_replicates_maxN)
# merging metadata and data
nokelp <- left_join(nokelp_metadata, nokelp_replicates_maxN, by=c("Code"="Site") )
head(nokelp)
nokelp_sites_maxN <- nokelp %>%
pivot_longer(cols= contains("_"), names_to="species") %>%
mutate(value=as.numeric(value)) %>%
group_by(Site, Year, species) %>%
summarize(total=sum(value))
View(nokelp_sites_maxN)
kelp_data <- read.csv("here", "data", "raw_data", "TemporalBRUV_kelp_species.csv")
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
kelp_data <- read.csv("here", "data", "raw_data", "TemporalBRUV_kelp_species.csv")
rm(list=ls()) # cleaning memory
# libraries
library(tidyverse)
library(here)
kelp_data <- read.csv("here", "data", "raw_data", "TemporalBRUV_kelp_species.csv")
# libraries
library(tidyverse)
library(here)
kelp_data <- read.csv("here", "data", "raw_data", "TemporalBRUV_kelp_species.csv")
kelp_data <- read.csv(here::here("data", "raw_data", "TemporalBRUV_kelp_species.csv") )
View(kelp_data)
kelp_metadata <- read.csv(here::here("from_paula", "TemporalBRUV_species_metadata_kelp.csv"))
kelp_metadata <- read.csv(here::here("from_paula", "TemporalBRUV_species_metadata_kelp.csv"))
View(kelp_metadata)
kelp_metadata <- read.csv(here::here("data", "raw_data", "TemporalBRUV_kelp_metadata.csv"))
# merging metadata and data
kelp <- left_join(kelp_metadata, kelp_data, by=c("Code"="Site") )
# merging metadata and data
kelp <- left_join(kelp_metadata, kelp_data, by="Code" )
View(kelp)
# computing mean maxN per year ----
kelp_maxN <- kelp %>%
pivot_longer(cols= contains("_"), names_to="species") %>%
mutate(value=as.numeric(value)) %>%
group_by(Site, Year, species) %>%
summarize(total=mean(value)) %>%
ungroup() %>%
pivot_wider(names_from = "species", values_from = "total") %>%
mutate(Code=paste(Site, Year,sep="_"), .before="Site")
View(kelp_maxN)
# computing mean maxN per year ----
kelp_maxN <- kelp %>%
pivot_longer(cols= contains("_"), names_to="species") %>%
mutate(value=as.numeric(value)) %>%
group_by(Year, species) %>%
summarize(total=mean(value)) %>%
ungroup() %>%
pivot_wider(names_from = "species", values_from = "total") %>%
# computing mean maxN per year ----
kelp_maxN <- kelp %>%
pivot_longer(cols= contains("_"), names_to="species") %>%
mutate(value=as.numeric(value)) %>%
group_by(Year, species) %>%
summarize(total=mean(value)) %>%
ungroup() %>%
pivot_wider(names_from = "species", values_from = "total")
kelp_maxN <- kelp
kelp_maxN <- kelp %>%
pivot_longer(cols= contains("_"), names_to="species")
kelp_maxN <- kelp %>%
pivot_longer(cols= contains("_"), names_to="species") %>%
mutate(value=as.numeric(value))
kelp_maxN <- kelp %>%
pivot_longer(cols= contains("_"), names_to="species") %>%
mutate(value=as.numeric(value)) %>%
group_by(Year, species)
kelp_maxN <- kelp %>%
pivot_longer(cols= contains("_"), names_to="species") %>%
mutate(value=as.numeric(value)) %>%
group_by(Year, species) %>%
summarize(total=mean(value))
View(kelp_maxN)
kelp_maxN <- kelp %>%
pivot_longer(cols= contains("_"), names_to="species") %>%
mutate(value=as.numeric(value)) %>%
group_by(Year, species) %>%
summarize(total=mean(value)) %>%
ungroup() %>%
pivot_wider(names_from = "species", values_from = "total")
kelp_maxN <- kelp %>%
pivot_longer(cols= contains("_"), names_to="species")
traits <- read.csv(here::here("from_paula", "TemporalBRUV_species_traits_kelp.csv"))
# computing mean maxN per year ----
kelp_maxN <- kelp %>%
pivot_longer(cols= contains("_"), names_to="Species")
# merging traits and data
kelp_traits <- left_join(traits, kelp_maxN, by="Species" )
View(kelp_traits)
# computing mean maxN per year ----
kelp_maxN <- kelp %>%
pivot_longer(cols= contains("_"), names_to="Species") %>%
mutate(value=as.numeric(value)) %>%
group_by(Year, species) %>%
summarize(total=mean(value))
# computing mean maxN per year ----
kelp_maxN <- kelp %>%
pivot_longer(cols= contains("_"), names_to="Species") %>%
mutate(value=as.numeric(value)) %>%
group_by(Year, Species) %>%
summarize(total=mean(value))
kelp_maxN <- kelp %>%
pivot_longer(cols= contains("_"), names_to="Species") %>%
mutate(value=as.numeric(value))
kelp_2 <- kelp_traits %>%
group_by(Year, Agg) %>%
summarize(
n = n(),
agg_mean = mean(Agg),
agg_sd = sd(Agg)
)
View(kelp_2)
View(kelp_2)
kelp_2 <- kelp_traits %>%
group_by(Year, Agg) %>%
summarize(
n = n(),
agg_mean = mean(value),
agg_sd = sd(value)
)
View(kelp_2)
View(kelp_2)
agg <- c(Solitary= "seagreen4", Group= "seagreen2", Pair="lightsalmon1")
agg_plot <- ggplot(kelp_2, aes (x= Year,y = agg_mean, color=Agg)) +
geom_point()+
geom_smooth(method = "lm")+
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
#scale_y_continuous( limits = c(0.4,0.8), breaks = seq(from=0.4, to=0.8, by=0.2)  ) +
scale_color_manual(values=agg) +
scale_fill_manual(values=agg) +
labs(x="", y="Total maxN") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.title = element_text(size=14), legend.text = element_text(size=14),
legend.background = element_blank(), legend.key=element_blank())
agg_plot
View(kelp_traits)
kelp_size <- kelp_traits %>%
group_by(Year, Size) %>%
summarize(
n = n(),
size_mean = mean(value),
size_sd = sd(value)
)
View(kelp_size)
size <- c(S1= "green", S2= "red", S3="blue", s4="orange", s5="yellow", s6="black")
size_plot <- ggplot(size_agg, aes (x= Year,y = size_mean, color=Size)) +
geom_point()+
geom_smooth(method = "lm")+
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
#scale_y_continuous( limits = c(0.4,0.8), breaks = seq(from=0.4, to=0.8, by=0.2)  ) +
scale_color_manual(values=agg) +
scale_fill_manual(values=agg) +
labs(x="", y="Total maxN") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.title = element_text(size=14), legend.text = element_text(size=14),
legend.background = element_blank(), legend.key=element_blank())
size_plot <- ggplot(kelp_size, aes (x= Year,y = size_mean, color=Size)) +
geom_point()+
geom_smooth(method = "lm")+
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
#scale_y_continuous( limits = c(0.4,0.8), breaks = seq(from=0.4, to=0.8, by=0.2)  ) +
scale_color_manual(values=agg) +
scale_fill_manual(values=agg) +
labs(x="", y="Total maxN") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.title = element_text(size=14), legend.text = element_text(size=14),
legend.background = element_blank(), legend.key=element_blank())
size_plot
size_plot <- ggplot(kelp_size, aes (x= Year,y = size_mean, color=Size)) +
geom_point()+
geom_smooth(method = "lm")+
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
#scale_y_continuous( limits = c(0.4,0.8), breaks = seq(from=0.4, to=0.8, by=0.2)  ) +
scale_color_manual(values=size) +
scale_fill_manual(values=size) +
labs(x="", y="Total maxN") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.title = element_text(size=14), legend.text = element_text(size=14),
legend.background = element_blank(), legend.key=element_blank())
size_plot
size <- c(S1= "green", S2= "red", S3="blue", S4="orange", S5="yellow", S6="black")
size_plot <- ggplot(kelp_size, aes (x= Year,y = size_mean, color=Size)) +
geom_point()+
geom_smooth(method = "lm")+
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
#scale_y_continuous( limits = c(0.4,0.8), breaks = seq(from=0.4, to=0.8, by=0.2)  ) +
scale_color_manual(values=size) +
scale_fill_manual(values=size) +
labs(x="", y="Total maxN") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.title = element_text(size=14), legend.text = element_text(size=14),
legend.background = element_blank(), legend.key=element_blank())
size_plot
kelp_position <- kelp_traits %>%
group_by(Year, Position) %>%
summarize(
n = n(),
pos_mean = mean(value),
pos_sd = sd(value)
)
View(kelp_position)
pos <- c(BenthoP= "green", Benthic= "red", Pelagic="blue")
position_plot <- ggplot(kelp_position, aes (x= Year,y = pos_mean, color=Size)) +
geom_point()+
geom_smooth(method = "lm")+
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
#scale_y_continuous( limits = c(0.4,0.8), breaks = seq(from=0.4, to=0.8, by=0.2)  ) +
scale_color_manual(values=pos) +
scale_fill_manual(values=pos) +
labs(x="", y="Total maxN") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.title = element_text(size=14), legend.text = element_text(size=14),
legend.background = element_blank(), legend.key=element_blank())
position_plot
position_plot <- ggplot(kelp_position, aes (x= Year,y = pos_mean, color=Position)) +
geom_point()+
geom_smooth(method = "lm")+
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
#scale_y_continuous( limits = c(0.4,0.8), breaks = seq(from=0.4, to=0.8, by=0.2)  ) +
scale_color_manual(values=pos) +
scale_fill_manual(values=pos) +
labs(x="", y="Total maxN") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.title = element_text(size=14), legend.text = element_text(size=14),
legend.background = element_blank(), legend.key=element_blank())
position_plot
diet_plot <- ggplot(kelp_diet, aes (x= Year,y = diet_mean, color=diet)) +
geom_point()+
geom_smooth(method = "lm")+
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
#scale_y_continuous( limits = c(0.4,0.8), breaks = seq(from=0.4, to=0.8, by=0.2)  ) +
#scale_color_manual(values=diet) +
#scale_fill_manual(values=diet) +
labs(x="", y="Total maxN") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.title = element_text(size=14), legend.text = element_text(size=14),
legend.background = element_blank(), legend.key=element_blank())
kelp_diet <- kelp_traits %>%
group_by(Year, Diet) %>%
summarize(
n = n(),
diet_mean = mean(value),
diet_sd = sd(value)
)
diet_plot <- ggplot(kelp_diet, aes (x= Year,y = diet_mean, color=diet)) +
geom_point()+
geom_smooth(method = "lm")+
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
#scale_y_continuous( limits = c(0.4,0.8), breaks = seq(from=0.4, to=0.8, by=0.2)  ) +
#scale_color_manual(values=diet) +
#scale_fill_manual(values=diet) +
labs(x="", y="Total maxN") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.title = element_text(size=14), legend.text = element_text(size=14),
legend.background = element_blank(), legend.key=element_blank())
diet_plot
diet_plot <- ggplot(kelp_diet, aes (x= Year,y = diet_mean, color=Diet)) +
geom_point()+
geom_smooth(method = "lm")+
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
#scale_y_continuous( limits = c(0.4,0.8), breaks = seq(from=0.4, to=0.8, by=0.2)  ) +
#scale_color_manual(values=diet) +
#scale_fill_manual(values=diet) +
labs(x="", y="Total maxN") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.title = element_text(size=14), legend.text = element_text(size=14),
legend.background = element_blank(), legend.key=element_blank())
diet_plot
View(kelp_diet)
ggsave(diet_plot, file=here::here("outputs/", "diet_plot.png"),
height = 22, width = 25, unit = "cm" )
ggsave(position_plot, file=here::here("outputs/", "position_plot.png"),
height = 22, width = 25, unit = "cm" )
ggsave(size_plot, file=here::here("outputs/", "size_plot.png"),
height = 22, width = 25, unit = "cm" )
ggsave(agg_plot, file=here::here("outputs/", "agg_plot.png"),
height = 22, width = 25, unit = "cm" )
