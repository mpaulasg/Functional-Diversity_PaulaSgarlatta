spatial_toplot <- spatial_all %>%
group_by(Habitat) %>%
summarise(
n = n(),
TRic_mean = mean(TRic),
TRic_sd = sd(TRic),
fric_mean = mean(fric),
fric_sd = sd(fric),
fdis_mean = mean(fdis),
fdis_sd = sd(fdis),
fide_PC1_mean = mean(fide_PC1),
fide_PC1_sd = sd(fide_PC1),
fide_PC2_mean = mean(fide_PC2),
fide_PC2_sd = sd(fide_PC2),
fide_PC3_mean = mean(fide_PC3),
fide_PC3_sd = sd(fide_PC3)
) %>%
mutate( TRic_se = TRic_sd/sqrt(n))  %>%
mutate( fric_se = fric_sd/sqrt(n)) %>%
mutate( fdis_se = fdis_sd/sqrt(n)) %>%
mutate( fide_PC1_se = fide_PC1_sd/sqrt(n)) %>%
mutate( fide_PC2_se = fide_PC2_sd/sqrt(n)) %>%
mutate( fide_PC3_se = fide_PC3_sd/sqrt(n))
spatial_toplot
# color code for the 3 habitats
hab_colors <- c(Inshore= "#2C6BAA", Midshelf= "lightsalmon1", Offshore="firebrick3")
plot_spatial_taxo <- ggplot(spatial_toplot) +
geom_bar( aes(x=Habitat, y=TRic_mean, color = Habitat, fill = Habitat), stat="identity", color = "black", size=0.8) +
geom_errorbar( aes(x=Habitat, ymin=TRic_mean-TRic_se, ymax=TRic_mean+TRic_se), width=0.1, size=0.8, colour="black" ) +
scale_color_manual(values=hab_colors) +
scale_fill_manual(values=hab_colors) +
scale_y_continuous( limits = c(0,25), breaks = seq(from=0, to=35, by=5)  ) +
labs(x="", y="Species richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.position = "none", axis.text.x = element_blank())
plot_spatial_taxo
plot_spatial_func <- ggplot(spatial_toplot) +
geom_bar( aes(x=Habitat, y=fric_mean, color = Habitat, fill = Habitat), stat="identity", color = "black", size=0.8) +
geom_errorbar( aes(x=Habitat, ymin=fric_mean-fric_se, ymax=fric_mean+fric_se), width=0.1, size=0.8, colour="black" ) +
scale_color_manual(values=hab_colors) +
scale_fill_manual(values=hab_colors) +
scale_y_continuous( limits = c(0,0.5), breaks = seq(from=0, to=0.5, by=0.1)  ) +
labs(x="", y="Functional richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.position = "none")
plot_spatial_func
plot_spatial_taxo <- ggplot(spatial_all, aes(x=Habitat, y=TRic, color = Habitat, fill = Habitat)) +
geom_point(shape = 21, position = position_jitterdodge(jitter.width = 0)) +
#geom_errorbar( aes(x=Habitat, ymin=TRic_mean-TRic_se, ymax=TRic_mean+TRic_se), width=0.1, size=0.8, colour="black" ) +
scale_color_manual(values=hab_colors) +
scale_fill_manual(values=hab_colors) +
scale_y_continuous( limits = c(0,25), breaks = seq(from=0, to=35, by=5)  ) +
labs(x="", y="Species richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.position = "none", axis.text.x = element_blank())
plot_spatial_taxo
plot_spatial_taxo <- ggplot(spatial_all, aes(x=Habitat, y=TRic, color = Habitat, fill = Habitat)) + +geom_boxplot() +
geom_point(shape = 21, position = position_jitterdodge(jitter.width = 0)) +
#geom_errorbar( aes(x=Habitat, ymin=TRic_mean-TRic_se, ymax=TRic_mean+TRic_se), width=0.1, size=0.8, colour="black" ) +
scale_color_manual(values=hab_colors) +
scale_fill_manual(values=hab_colors) +
scale_y_continuous( limits = c(0,25), breaks = seq(from=0, to=35, by=5)  ) +
labs(x="", y="Species richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.position = "none", axis.text.x = element_blank())
plot_spatial_taxo <- ggplot(spatial_all, aes(x=Habitat, y=TRic, color = Habitat, fill = Habitat)) + geom_boxplot() +
geom_point(shape = 21, position = position_jitterdodge(jitter.width = 0)) +
#geom_errorbar( aes(x=Habitat, ymin=TRic_mean-TRic_se, ymax=TRic_mean+TRic_se), width=0.1, size=0.8, colour="black" ) +
scale_color_manual(values=hab_colors) +
scale_fill_manual(values=hab_colors) +
scale_y_continuous( limits = c(0,25), breaks = seq(from=0, to=35, by=5)  ) +
labs(x="", y="Species richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.position = "none", axis.text.x = element_blank())
plot_spatial_taxo
plot_spatial_taxo <- ggplot(spatial_all, aes(x=Habitat, y=TRic, color = Habitat, fill = Habitat)) + geom_boxplot() +
geom_point(shape = 21, position = position_jitterdodge(jitter.width = 0)) +
#geom_errorbar( aes(x=Habitat, ymin=TRic_mean-TRic_se, ymax=TRic_mean+TRic_se), width=0.1, size=0.8, colour="black" ) +
scale_color_manual(values=hab_colors) +
scale_fill_manual(values=hab_colors) +
#scale_y_continuous( limits = c(0,25), breaks = seq(from=0, to=35, by=5)  ) +
labs(x="", y="Species richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.position = "none", axis.text.x = element_blank())
plot_spatial_taxo
plot_spatial_func <- ggplot(spatial_all, aes(x=Habitat, y=fric, color = Habitat, fill = Habitat)) + geom_boxplot() +
#geom_bar( , stat="identity", color = "black", size=0.8) +
#geom_errorbar( aes(x=Habitat, ymin=fric_mean-fric_se, ymax=fric_mean+fric_se), width=0.1, size=0.8, colour="black" ) +
scale_color_manual(values=hab_colors) +
scale_fill_manual(values=hab_colors) +
scale_y_continuous( limits = c(0,0.5), breaks = seq(from=0, to=0.5, by=0.1)  ) +
labs(x="", y="Functional richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.position = "none")
plot_spatial_func
plot_spatial_func <- ggplot(spatial_all, aes(x=Habitat, y=fric, color = Habitat, fill = Habitat)) + geom_boxplot() +
#geom_bar( , stat="identity", color = "black", size=0.8) +
#geom_errorbar( aes(x=Habitat, ymin=fric_mean-fric_se, ymax=fric_mean+fric_se), width=0.1, size=0.8, colour="black" ) +
scale_color_manual(values=hab_colors) +
scale_fill_manual(values=hab_colors) +
#scale_y_continuous( limits = c(0,0.5), breaks = seq(from=0, to=0.5, by=0.1)  ) +
labs(x="", y="Functional richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.position = "none")
plot_spatial_func
plot_spatial_func <- ggplot(spatial_all, aes(x=Habitat, y=fric, color = Habitat, fill = Habitat)) + geom_boxplot() +
geom_point(shape = 21, position = position_jitterdodge(jitter.width = 0)) +
#geom_bar( , stat="identity", color = "black", size=0.8) +
#geom_errorbar( aes(x=Habitat, ymin=fric_mean-fric_se, ymax=fric_mean+fric_se), width=0.1, size=0.8, colour="black" ) +
scale_color_manual(values=hab_colors) +
scale_fill_manual(values=hab_colors) +
#scale_y_continuous( limits = c(0,0.5), breaks = seq(from=0, to=0.5, by=0.1)  ) +
labs(x="", y="Functional richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.position = "none")
plot_spatial_func
plot_spatial_func <- ggplot(spatial_all, aes(x=Habitat, y=fric, fill = Habitat)) + geom_boxplot() +
geom_point(shape = 21, position = position_jitterdodge(jitter.width = 0)) +
#geom_bar( , stat="identity", color = "black", size=0.8) +
#geom_errorbar( aes(x=Habitat, ymin=fric_mean-fric_se, ymax=fric_mean+fric_se), width=0.1, size=0.8, colour="black" ) +
scale_color_manual(values=hab_colors) +
scale_fill_manual(values=hab_colors) +
#scale_y_continuous( limits = c(0,0.5), breaks = seq(from=0, to=0.5, by=0.1)  ) +
labs(x="", y="Functional richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.position = "none")
plot_spatial_func
plot_spatial_taxo <- ggplot(spatial_all, aes(x=Habitat, y=TRic, fill = Habitat)) + geom_boxplot() +
geom_point(shape = 21, position = position_jitterdodge(jitter.width = 0)) +
#geom_errorbar( aes(x=Habitat, ymin=TRic_mean-TRic_se, ymax=TRic_mean+TRic_se), width=0.1, size=0.8, colour="black" ) +
scale_color_manual(values=hab_colors) +
scale_fill_manual(values=hab_colors) +
#scale_y_continuous( limits = c(0,25), breaks = seq(from=0, to=35, by=5)  ) +
labs(x="", y="Species richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.position = "none", axis.text.x = element_blank())
plot_spatial_taxo
plot_spatial_func <- ggplot(spatial_all, aes(x=Habitat, y=fric, fill = Habitat)) + geom_boxplot() +
geom_point(shape = 21, position = position_jitterdodge(jitter.width = 0)) +
#geom_bar( , stat="identity", color = "black", size=0.8) +
#geom_errorbar( aes(x=Habitat, ymin=fric_mean-fric_se, ymax=fric_mean+fric_se), width=0.1, size=0.8, colour="black" ) +
scale_color_manual(values=hab_colors) +
scale_fill_manual(values=hab_colors) +
#scale_y_continuous( limits = c(0,0.5), breaks = seq(from=0, to=0.5, by=0.1)  ) +
labs(x="", y="Functional richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.position = "none")
plot_spatial_func
temporal_kelp<- kelp_metadata %>%
mutate(Habitat="kelp") %>%
left_join( rownames_to_column(temporal_alpha_kelp_transect, "Code"), by="Code" ) %>%
select(Code, Site, Year, Habitat, TRic=sp_richn, fric, fdis, fide_PC1, fide_PC2, fide_PC3 )
plot_tempo_taxo <- ggplot(temporal_kelp, aes(x=Year, y=TRic), ) +
stat_summary(geom = "point", show.legend = F) +
geom_smooth(method = "lm", show.legend = F) +
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
scale_y_continuous( limits = c(15,30), breaks = seq(from=15, to=30, by=5)  ) +
scale_color_manual(values="seagreen4") +
scale_fill_manual(values="seagreen4") +
labs(x="", y="Species richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.position = "none")
plot_tempo_taxo
plot_tempo_taxo <- ggplot(temporal_kelp, aes(x=Year, y=TRic), ) +
stat_summary(geom = "point", show.legend = F) +
geom_smooth(method = "lm", show.legend = F) +
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
#scale_y_continuous( limits = c(15,30), breaks = seq(from=15, to=30, by=5)  ) +
scale_color_manual(values="seagreen4") +
scale_fill_manual(values="seagreen4") +
labs(x="", y="Species richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.position = "none")
plot_tempo_taxo
plot_tempo_func <- ggplot(temporal_kelp, aes(x=Year, y=fric)) +
stat_summary(geom = "point", show.legend = F) +
geom_smooth(method = "lm", show.legend = F) +
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
#scale_y_continuous( limits = c(0.4,0.8), breaks = seq(from=0.4, to=0.8, by=0.2)  ) +
scale_color_manual(values="seagreen4") +
scale_fill_manual(values="seagreen4") +
labs(x="", y="Functional richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.title = element_text(size=14), legend.text = element_text(size=14),
legend.background = element_blank(), legend.key=element_blank())
plot_tempo_func
plot_tempo_func <- ggplot(temporal_kelp, aes(x=Year, y=fric, colour=Habitat)) +
stat_summary(geom = "point", show.legend = F) +
geom_smooth(method = "lm", show.legend = F) +
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
#scale_y_continuous( limits = c(0.4,0.8), breaks = seq(from=0.4, to=0.8, by=0.2)  ) +
scale_color_manual(values="seagreen4") +
scale_fill_manual(values="seagreen4") +
labs(x="", y="Functional richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.title = element_text(size=14), legend.text = element_text(size=14),
legend.background = element_blank(), legend.key=element_blank())
plot_tempo_func
plot_tempo_taxo <- ggplot(temporal_kelp, aes(x=Year, y=TRic, colour=Habitat), ) +
stat_summary(geom = "point", show.legend = F) +
geom_smooth(method = "lm", show.legend = F) +
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
#scale_y_continuous( limits = c(15,30), breaks = seq(from=15, to=30, by=5)  ) +
scale_color_manual(values="seagreen4") +
scale_fill_manual(values="seagreen4") +
labs(x="", y="Species richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.position = "none")
plot_tempo_taxo
## merging all plot into a single figure and saving as png ####
figure1 <- ( plot_spatial_taxo + plot_tempo_taxo ) / ( plot_spatial_func +  plot_tempo_func )
figure1
ggsave(figure1, file=here::here("outputs/", "using biomass-maxN", "Figure1_biomass_transect.png"),
height = 22, width = 25, unit = "cm" )
plot_tempo_func <- ggplot(temporal_kelp, aes(x=Year, y=fric, colour=Habitat)) +
#stat_summary(geom = "point", show.legend = F) +
geom_smooth(method = "lm", show.legend = F) +
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
#scale_y_continuous( limits = c(0.4,0.8), breaks = seq(from=0.4, to=0.8, by=0.2)  ) +
scale_color_manual(values="seagreen4") +
scale_fill_manual(values="seagreen4") +
labs(x="", y="Functional richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.title = element_text(size=14), legend.text = element_text(size=14),
legend.background = element_blank(), legend.key=element_blank())
plot_tempo_func
plot_tempo_func <- ggplot(temporal_kelp, aes(x=Year, y=fric, colour=Habitat)) +
#stat_summary(geom = "point", show.legend = F) +
geom_point()+
geom_smooth(method = "lm", show.legend = F) +
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
#scale_y_continuous( limits = c(0.4,0.8), breaks = seq(from=0.4, to=0.8, by=0.2)  ) +
scale_color_manual(values="seagreen4") +
scale_fill_manual(values="seagreen4") +
labs(x="", y="Functional richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.title = element_text(size=14), legend.text = element_text(size=14),
legend.background = element_blank(), legend.key=element_blank())
plot_tempo_func
plot_tempo_func <- ggplot(temporal_kelp, aes(x=Year, y=fric, colour=Habitat)) +
stat_summary(geom = "point", show.legend = F) +
geom_smooth(method = "lm", show.legend = F) +
scale_x_continuous( limits = c(2001, 2019), breaks = seq(from=2002, to=2018, by=4)  ) +
#scale_y_continuous( limits = c(0.4,0.8), breaks = seq(from=0.4, to=0.8, by=0.2)  ) +
scale_color_manual(values="seagreen4") +
scale_fill_manual(values="seagreen4") +
labs(x="", y="Functional richness") +
theme(panel.background=element_rect(fill="white"), panel.grid.minor = element_blank(), axis.ticks.y = element_blank(),
panel.grid.major = element_blank(),axis.line = element_line(size = 1, colour = "black"),
axis.text = element_text(size = (14),colour = "black"), axis.title = element_text(size= (16)),
legend.title = element_text(size=14), legend.text = element_text(size=14),
legend.background = element_blank(), legend.key=element_blank())
plot_tempo_func
rm(list=ls()) # cleaning memory
library(tidyverse)
library(dplyr)
library(car)
library(lme4)
library(glmmTMB)
library(DHARMa)
library(emmeans)
library(here)
load(here::here("outputs", "using biomass-maxN",  "temporal_alpha_kelp_biomass.RData") )
load(here::here("outputs", "using biomass-maxN", "spatial_alpha_biomass.RData") )
load(here::here("outputs", "using biomass-maxN",  "shift3D_kelp_stats.RData") )
load(here::here("outputs", "using biomass-maxN", "shift3D_space_stats.RData") )
View(shift3D_kelp_stats)
View(shift3D_space_stats)
View(spatial_alpha)
View(spatial_alpha)
View(temporal_alpha_kelp)
kelp_stats <- temporal_alpha_kelp %>%
rownames_to_column(var = "Site1") %>%
mutate(Site=sub("_.*", "", Site1),Year=sub(".*_", "", Site1), .before="Site1")%>%
select(-Site1)
spatial_stats <- spatial_alpha %>%
rownames_to_column(var = "Site1") %>%
mutate(Site=sub("_.*", "", Site1),Habitat=sub(".*_", "", Site1), .before="Site1")%>%
select(-Site1)
View(kelp_stats)
View(spatial_stats)
kelp_stats$Year_cont <- as.numeric(kelp_stats$Year)
kelp_s <- glmmTMB(sp_richn ~ Year_cont + (1|Site), data=kelp_stats, family = poisson())
summary(kelp_s)
Anova(kelp_s)#Significant - p=0.0002
kelp_s <- glmmTMB(sp_richn ~ Year_cont + (1|Site), data=kelp_stats, family = nbinom2())
summary(kelp_s)
Anova(kelp_s)#Significant - p=0.0002
kelp_s <- glmmTMB(sp_richn ~ Year + (1|Site), data=kelp_stats, family = nbinom2())
summary(kelp_s)
Anova(kelp_s)#Significant - p=0.0002
kelp_s <- glmmTMB(sp_richn ~ Year + (1|Site), data=kelp_stats, family = poisson())
summary(kelp_s)
Anova(kelp_s)#Significant - p=0.0002
system.time(mod_1 <- drop1(kelp_s, test = "Chisq", all.cols=TRUE))
print(mod_1)
kelp_res_s <- simulateResiduals(kelp_s)
plot(kelp_res_s) #Good
space_s <- glmmTMB (sp_richn ~ Habitat + (1|Site), data=spatial_stats, family = poisson())
summary(space_s)
Anova(space_s)#Significant
space_res_s <- simulateResiduals(space_s)
plot(space_res_s) #Good
system.time(space_mod_s <- drop1(space_s, test = "Chisq", all.cols=TRUE))
print(space_mod_s)
kelp_fric <- glmmTMB(fric ~ Year + (1|Site), data=kelp_stats, family=beta_family())
summary(kelp_fric)
Anova(kelp_fric)#Significant - p=0.004
kelp_res_fric <- simulateResiduals(kelp_fric)
plot(kelp_res_fric) # Good
system.time(kelp_mod_fric <- drop1(kelp_fric, test = "Chisq", all.cols=TRUE))
print(kelp_mod_fric)
spatial_fric <- glmmTMB (fric ~ Habitat + (1|Site) , data=spatial_stats, family = beta_family())
summary(spatial_fric)
Anova(spatial_fric)#Significant - p<0.000005
spatial_res_fric <- simulateResiduals(spatial_fric)
plot(spatial_res_fric) # Good
system.time(spatial_mod_fric <- drop1(spatial_fric, test = "Chisq", all.cols=TRUE))
print(spatial_mod_fric)
kelp_fdis <- glmmTMB(fdis ~ Year + (1|Site), data=kelp_stats, family = beta_family())
summary(kelp_fdis)
Anova(kelp_fdis)#Significative - p=0.006
kelp_res_fdis <- simulateResiduals(kelp_fdis)
plot(kelp_res_fdis) # Good
system.time(kelp_mod_fdis <- drop1(kelp_fdis, test = "Chisq", all.cols=TRUE))
print(kelp_mod_fdis)
spatial_fdis <- glmmTMB (fdis ~ Habitat, data=spatial_stats, family = beta_family())
summary(spatial_fdis)
Anova(spatial_fdis)# No diferences - p=0.4495
spatial_res_fdis <- simulateResiduals(spatial_fdis)
plot(spatial_res_fdis) # Good
system.time(spatial_mod_fdis <- drop1(spatial_fdis, test = "Chisq", all.cols=TRUE))
print(spatial_mod_fdis)
kelp_fide1 <- glmmTMB(fide_PC1 ~ Year + (1|Site), data=kelp_stats, family = gaussian())
summary(kelp_fide1)
Anova(kelp_fide1) #Significant - p=0.03
kelp_res_fide1 <- simulateResiduals(kelp_fide1)
plot(kelp_res_fide1) # Good
system.time(kelp_mod_fide1 <- drop1(kelp_fide1, test = "Chisq", all.cols=TRUE))
print(kelp_mod_fide1)
spatial_fide1 <- glmmTMB (fide_PC1 ~ Habitat + (1|Site),data=spatial_stats, family = gaussian())
summary(spatial_fide1)
Anova(spatial_fide1)# Not significant - p=0.11
spatial_res_fide1 <- simulateResiduals(spatial_fide1)
plot(spatial_res_fide1) # Good
system.time(spatial_mod_fide1 <- drop1(spatial_fide1, test = "Chisq", all.cols=TRUE))
print(spatial_mod_fide1)
spatial_fide1 <- glmmTMB (fide_PC1 ~ Habitat + (1|Site),data=spatial_stats, family = gaussian())
kelp_fide2 <- glmmTMB(fide_PC2 ~ Year + (1|Site), data=kelp_stats, family = gaussian())
summary(kelp_fide2)
Anova(kelp_fide2) #Significant - p=0.001
kelp_res_fide2 <- simulateResiduals(kelp_fide2)
plot(kelp_res_fide2) # Good
system.time(kelp_mod_fide2 <- drop1(kelp_fide2, test = "Chisq", all.cols=TRUE))
print(kelp_mod_fide2)
spatial_fide2 <- glmmTMB (fide_PC2 ~ Habitat + (1|Site),data=spatial_stats, family = gaussian())
summary(spatial_fide2)
Anova(spatial_fide2) #Not significant - p=0.62
spatial_res_fide2 <- simulateResiduals(spatial_fide2)
plot(spatial_res_fide2) # Good
system.time(spatial_mod_fide2 <- drop1(spatial_fide2, test = "Chisq", all.cols=TRUE))
print(spatial_mod_fide2)
kelp_fide3 <- glmmTMB(fide_PC3 ~ Year + (1|Site), data=kelp_stats, family = gaussian())
summary(kelp_fide3)
Anova(kelp_fide3) #Significant - p=0.0003
kelp_res_fide3 <- simulateResiduals(kelp_fide3)
plot(kelp_res_fide3) # Good
system.time(kelp_mod_fide3 <- drop1(kelp_fide3, test = "Chisq", all.cols=TRUE))
print(kelp_mod_fide3)
spatial_fide3 <- glmmTMB (fide_PC3 ~ Habitat + (1|Site),data=spatial_stats, family = gaussian())
summary(spatial_fide3)
Anova(spatial_fide3) #Significant - p=0.0005
spatial_res_fide3 <- simulateResiduals(spatial_fide3)
plot(spatial_res_fide3) # Good
system.time(spatial_mod_fide3 <- drop1(spatial_fide3, test = "Chisq", all.cols=TRUE))
print(spatial_mod_fide3)
rm(list=ls()) # cleaning memory
library(tidyverse)
library(dplyr)
library(car)
library(lme4)
library(glmmTMB)
library(DHARMa)
library(emmeans)
library(here)
load(here::here("outputs", "using biomass-maxN", "temporal_alpha_kelp_transect.RData") )
load(here::here("outputs", "using biomass-maxN", "spatial_alpha_transect.RData") )
kelp_metadata <- read.csv(here::here("from_paula", "TemporalBRUV_species_metadata_kelp.csv"))
spatial_metadata <- read.csv(here::here("from_paula", "SpatialUVC_metadata_transect.csv"))
kelp_stats <- temporal_alpha_kelp_transect %>%
rownames_to_column(var = "Code") %>%
inner_join(kelp_metadata[ , c("Code", "Site", "Year")], by = c("Code"), all.x=TRUE) %>%
select(-Code)
kelp_stats$Year_cont <- as.numeric(kelp_stats$Year)
spatial_stats <- spatial_alpha_transect %>%
rownames_to_column(var = "Code") %>%
inner_join(spatial_metadata[ , c("Code", "Site", "Habitat")], by = c("Code"), all.x=TRUE) %>%
select(-Code)
View(kelp_stats)
View(spatial_stats)
kelp_s <- glmmTMB(sp_richn ~ Year + (1|Site), data=kelp_stats, family = poisson())
summary(kelp_s)
Anova(kelp_s)#Significant - p=<0.0000005
kelp_res_s <- simulateResiduals(kelp_s)
plot(kelp_res_s) #Good
space_s <- glmmTMB (sp_richn ~ Habitat + (1|Site), data=spatial_stats, family = nbinom2())
summary(space_s)
Anova(space_s)#Not significant - p=0.12
largeModel <- glmer.nb(sp_richn ~Habitat + (1|Site), data=spatial_stats)
smallModel <- glmer.nb(sp_richn ~1+(1|Site), data=spatial_stats)
library(pbkrtest)
PBmodcomp(largeModel, smallModel, nsim = 50)
space_res_s <- simulateResiduals(space_s)
plot(space_res_s) # Good
kelp_fric <- glmmTMB(fric ~ Year + (1|Site), data=kelp_stats, family=beta_family())
summary(kelp_fric)
Anova(kelp_fric)#Significant - p<0.0000005
kelp_res_fric <- simulateResiduals(kelp_fric)
plot(kelp_res_fric) # Good
spatial_fric <- glmmTMB (fric ~ Habitat + (1|Site) , data=spatial_stats, family = beta_family())
summary(spatial_fric)
Anova(spatial_fric)#Not significant - p=0.16
spatial_res_fric <- simulateResiduals(spatial_fric)
plot(spatial_res_fric) # Good
kelp_fdis <- glmmTMB(fdis ~ Year + (1|Site), data=kelp_stats, family = beta_family())
summary(kelp_fdis)
Anova(kelp_fdis)#No Significative - p=0.5
kelp_res_fdis <- simulateResiduals(kelp_fdis)
plot(kelp_res_fdis) # Not good
resid <- residuals(simulateResiduals(kelp_fdis), quantileFunction = qnorm, outliers = c(-7,7))
plot(resid~predict(kelp_fdis))
pairs(emmeans(kelp_fdis, spec=~Year, type="response"))
spatial_fdis <- glmmTMB (fdis ~ Habitat, data=spatial_stats, family = beta_family())
summary(spatial_fdis)
Anova(spatial_fdis)# No diferences - p=0.88
spatial_res_fdis <- simulateResiduals(spatial_fdis)
plot(spatial_res_fdis) # Good
kelp_fide1 <- glmmTMB(fide_PC1 ~ Year + (1|Site), data=kelp_stats, family = gaussian())
summary(kelp_fide1)
Anova(kelp_fide1) #No significant - p=0.39
kelp_res_fide1 <- simulateResiduals(kelp_fide1)
plot(kelp_res_fide1) # Good
spatial_fide1 <- glmmTMB (fide_PC1 ~ Habitat + (1|Site),data=spatial_stats, family = gaussian())
summary(spatial_fide1)
Anova(spatial_fide1)# Not significant - p=0.25
spatial_res_fide1 <- simulateResiduals(spatial_fide1)
plot(spatial_res_fide1) # Good
kelp_fide2 <- glmmTMB(fide_PC2 ~ Year + (1|Site), data=kelp_stats, family = gaussian())
summary(kelp_fide2)
Anova(kelp_fide2) #Not significant - p=0.5
kelp_res_fide2 <- simulateResiduals(kelp_fide2)
plot(kelp_res_fide2) # Good
spatial_fide2 <- glmmTMB (fide_PC2 ~ Habitat + (1|Site),data=spatial_stats, family = gaussian())
summary(spatial_fide2)
Anova(spatial_fide2) #Not significant - p=0.65
spatial_res_fide2 <- simulateResiduals(spatial_fide2)
plot(spatial_res_fide2) # Good
kelp_fide3 <- glmmTMB(fide_PC3 ~ Year_cont + (1|Site), data=kelp_stats, family = gaussian())
summary(kelp_fide3)
Anova(kelp_fide3) #Significant - p=0.02
kelp_res_fide3 <- simulateResiduals(kelp_fide3)
plot(kelp_res_fide3) # Good
spatial_fide3 <- glmmTMB (fide_PC3 ~ Habitat + (1|Site),data=spatial_stats, family = gaussian())
summary(spatial_fide3)
Anova(spatial_fide3) #Significant - p=0.01
spatial_res_fide3 <- simulateResiduals(spatial_fide3)
plot(spatial_res_fide3) # Good
shift3D_kelp_stats$Year_cont <- as.numeric(shift3D_kelp_stats$Year)
kelp_shift <- lmer (shift3D ~ Year_cont + (1|Site1), data=shift3D_kelp_stats)
summary(kelp_shift)
Anova(kelp_shift)
space_shift <- glmmTMB (shift3D ~ Habitat , data=shift3D_space_stats)
summary(space_shift)
Anova(space_shift)
